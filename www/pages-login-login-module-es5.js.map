{"version":3,"sources":["./src/app/pages/login/login.page.html","./src/app/core/overlay.service.ts","./src/app/pages/login/login.module.ts","./src/app/pages/login/login.page.scss","./src/app/pages/login/login.page.ts","./src/app/services/user.ts","./src/app/shared/components/logout-button/logout-button.component.ts","./src/app/shared/components/menu-toggle/menu-toggle.component.ts","./src/app/shared/shared.module.ts"],"names":[],"mappings":"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","file":"pages-login-login-module-es5.js","sourcesContent":["module.exports = \"<ion-content padding>\\r\\n  <ion-grid>\\r\\n    <!-- alinha no centro e define pra coluna a resolucao de acordo com o tamanho da tela -->\\r\\n    <ion-row justify-content-center>\\r\\n      <ion-col\\r\\n        size-sm=\\\"8\\\"\\r\\n        size-md=\\\"12\\\"\\r\\n        size-lg=\\\"3\\\"\\r\\n        size-xl=\\\"3\\\"\\r\\n      >\\r\\n     <!-- arrumar essas pohha de padding -->\\r\\n\\r\\n      <div class=\\\"ion-text-cent\\\">\\r\\n        <ion-col size=\\\"12\\\" size-sm=\\\"6\\\">\\r\\n          <img width = \\\"240px\\\" height = \\\"180px\\\" src=\\\"../../../assets/img/avp.png\\\">\\r\\n        </ion-col>\\r\\n\\r\\n      </div>\\r\\n      \\r\\n      <form #form=\\\"ngForm\\\">\\r\\n        <ion-item>\\r\\n            <ion-icon\\r\\n              name=\\\"mail\\\"\\r\\n              color=\\\"primary\\\"\\r\\n              slot=\\\"start\\\"\\r\\n            ></ion-icon>\\r\\n            <ion-input\\r\\n              type=\\\"email\\\"\\r\\n              name=\\\"email\\\"\\r\\n              placeholder=\\\"Informe seu e-mail\\\"\\r\\n              inputmode=\\\"email\\\"\\r\\n              autofocus=\\\"true\\\"\\r\\n              [(ngModel)]=\\\"user.email\\\"\\r\\n              required\\r\\n            ></ion-input>\\r\\n          </ion-item>\\r\\n\\r\\n          <ion-item>\\r\\n            <ion-icon\\r\\n              name=\\\"lock\\\"\\r\\n              color=\\\"primary\\\"\\r\\n              slot=\\\"start\\\"\\r\\n            ></ion-icon>\\r\\n            <ion-input\\r\\n              type=\\\"password\\\"\\r\\n              name=\\\"password\\\"\\r\\n              placeholder=\\\"Informe sua senha\\\"\\r\\n              [(ngModel)]=\\\"user.password\\\"\\r\\n              required\\r\\n            ></ion-input>\\r\\n          </ion-item>\\r\\n        </form>\\r\\n\\r\\n        <ion-content>\\r\\n    <ion-button\\r\\n    expand=\\\"block\\\"\\r\\n    type=\\\"submit\\\"\\r\\n    class=\\\"login-button\\\"\\r\\n    (click)=\\\"signIn()\\\"\\r\\n  >\\r\\n    Acessar\\r\\n  </ion-button>\\r\\n\\r\\n<ion-button\\r\\n  expand=\\\"block\\\"\\r\\n  fill=\\\"clear\\\"\\r\\n  (click)=\\\"createAccount()\\\"\\r\\n>\\r\\n  Participar\\r\\n</ion-button>\\r\\n\\r\\n</ion-content>\\r\\n          \\r\\n\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-grid>\\r\\n\\r\\n</ion-content>\\r\\n\"","import { Injectable } from '@angular/core';\r\nimport { AlertController, LoadingController, ToastController } from '@ionic/angular';\r\nimport { AlertOptions, LoadingOptions, ToastOptions } from '@ionic/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OverlayService {\r\n  constructor(\r\n    private alertCtrl: AlertController,\r\n    private loadingCtrl: LoadingController,\r\n    private toastCtrl: ToastController\r\n  ) {}\r\n\r\n  async alert(options?: AlertOptions): Promise<HTMLIonAlertElement> {\r\n    const alert = await this.alertCtrl.create(options);\r\n    await alert.present();\r\n    return alert;\r\n  }\r\n\r\n  async loading(options?: LoadingOptions): Promise<HTMLIonLoadingElement> {\r\n    const loading = await this.loadingCtrl.create({\r\n      message: 'Loading...',\r\n      ...options\r\n    });\r\n    await loading.present();\r\n    loading.dismiss();\r\n    return loading;\r\n  }\r\n\r\n  async toast(options?: ToastOptions): Promise<HTMLIonToastElement> {\r\n    const toast = await this.toastCtrl.create({\r\n      position: 'bottom',\r\n      duration: 3000,\r\n      showCloseButton: true,\r\n      closeButtonText: 'Ok',\r\n      ...options\r\n    });\r\n    await toast.present();\r\n    return toast;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginPage } from './login.page';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LoginPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [SharedModule, RouterModule.forChild(routes)],\r\n  declarations: [LoginPage]\r\n})\r\nexport class LoginPageModule {}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2xvZ2luL2xvZ2luLnBhZ2Uuc2NzcyJ9 */\"","import { Component, ViewChild } from '@angular/core';\r\nimport { User } from 'src/app/services/user';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { ToastController } from '@ionic/angular';\r\nimport { Network } from '@ionic-native/network/ngx';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.page.html',\r\n  styleUrls: ['./login.page.scss']\r\n})\r\nexport class LoginPage {\r\n  user: User = new User();\r\n  @ViewChild('form', null) form: NgForm;\r\n\r\n  constructor(\r\n    public router: Router,\r\n    private authService: AuthService,\r\n    private toastController: ToastController,\r\n    private network: Network\r\n  ) {\r\n    let disconnectSubscription = this.network.onDisconnect().subscribe(() => {\r\n      this.presentToast('NetWork Desconectada! :-(');\r\n    });\r\n  }\r\n  async presentToast(msg: string) {\r\n    const toast = await this.toastController.create({\r\n      message: msg,\r\n      duration: 2000\r\n    });\r\n    toast.present();\r\n  }\r\n\r\n  createAccount() {\r\n    this.router.navigate(['usuario/cadastro']);\r\n  }\r\n\r\n  signIn() {\r\n    // achar aqui uma maneira de redirecinar\r\n    if (this.form.form.valid) {\r\n      this.authService\r\n        .signIn(this.user)\r\n        .then(() => {\r\n          this.router.navigate(['assistente/cadastro']); //Direciona após logado\r\n        })\r\n        .catch((error: any) => {\r\n          if (error.code == 'auth/invalid-email') {\r\n            this.presentToast('E-mail invalido');\r\n          } else if (error.code == 'auth/user-disabled') {\r\n            this.presentToast('Usuario desativado');\r\n          } else if (error.code == 'auth/user-not-found') {\r\n            this.presentToast('Usuario não encontrado');\r\n          } else if (error.code == 'auth/wrong-password') {\r\n            this.presentToast('Senha invalida');\r\n          }\r\n        });\r\n    }\r\n  }\r\n}\r\n","export class User {\r\n  email: string;\r\n  password: string;\r\n}\r\n","import { NavController, MenuController } from '@ionic/angular';\r\nimport { OnInit, Component, Input } from '@angular/core';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { OverlayService } from 'src/app/core/overlay.service';\r\n\r\n@Component({\r\n  selector: 'app-logout-button',\r\n  template: `\r\n    <ion-buttons>\r\n      <ion-button (click)=\"logout()\">\r\n        <ion-icon name=\"exit\" slot=\"icon-only\"></ion-icon>\r\n      </ion-button>\r\n    </ion-buttons>\r\n  `\r\n})\r\nexport class LogoutButtonComponent implements OnInit {\r\n  @Input() menuId: string; // Vai receber um valor do menu que será utilizado (AQUI MANDA OS OUTROS TIPO DE MENU DE ACORDO COM O USUÁRIO ??)\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private menuCtrl: MenuController,\r\n    private navCtrl: NavController,\r\n    private overlayService: OverlayService\r\n  ) {}\r\n\r\n  async ngOnInit(): Promise<void> {\r\n    if (!(await this.menuCtrl.isEnabled(this.menuId))) {\r\n      //Checka se o menu esta habilitado\r\n      this.menuCtrl.enable(true, this.menuId); // Se não estiver, indica o  id   do menu q qer habilitar\r\n    }\r\n  }\r\n\r\n  async logout(): Promise<void> {\r\n    await this.overlayService.alert({\r\n      //Apresenta a mensagem\r\n      message: 'Deseja mesmo sair ?',\r\n      buttons: [\r\n        {\r\n          text: 'Sim', //caso sim\r\n          handler: async () => {\r\n            await this.authService.signOut(); // chama o método de deslogar criado\r\n            /* AULA 95 ->\r\n            Se usário estiver deslogado, desabilita o login\r\n            #USAR PARA TIPOS DE USUÁRIO NO FUTURO ???\r\n            */\r\n            await this.menuCtrl.enable(false, this.menuId);\r\n            // this.navCtrl.navigateRoot('login'); // Finaliza as paginas e dieciona pro login\r\n          }\r\n        },\r\n        'Não' // Não faz nada e segue a execução\r\n      ]\r\n    });\r\n  }\r\n}\r\n","/* AULA 92 -> Componente genérico de menu, que pode ser chamado em qualquer momento na aplicação */\r\nimport { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-menu-toggle',\r\n  /* Usando HTML inline, não necessitdando de arquivos externos */\r\n  template: `\r\n    <ion-buttons>\r\n      <ion-menu-toggle [menu]=\"menu\">\r\n        <ion-button>\r\n          <ion-icon slot=\"icon-only\" name=\"menu\"></ion-icon>\r\n        </ion-button>\r\n      </ion-menu-toggle>\r\n    </ion-buttons>\r\n  `\r\n})\r\nexport class MenuToggleComponent {\r\n  @Input() menu: string;\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { MenuToggleComponent } from './components/menu-toggle/menu-toggle.component';\r\nimport { LogoutButtonComponent } from './components/logout-button/logout-button.component';\r\n\r\n@NgModule({\r\n  declarations: [LogoutButtonComponent, MenuToggleComponent],\r\n  imports: [IonicModule],\r\n  exports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    IonicModule,\r\n    LogoutButtonComponent,\r\n    MenuToggleComponent,\r\n    FormsModule\r\n  ]\r\n})\r\nexport class SharedModule {}\r\n"],"sourceRoot":""}