{"version":3,"sources":["./src/app/pages/usuario-cadastro/usuario-cadastro.page.html","./src/app/pages/usuario-cadastro/usuario-cadastro.module.ts","./src/app/pages/usuario-cadastro/usuario-cadastro.page.scss","./src/app/pages/usuario-cadastro/usuario-cadastro.page.ts"],"names":[],"mappings":"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","file":"pages-usuario-cadastro-usuario-cadastro-module-es5.js","sourcesContent":["module.exports = \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button defaultHref=\\\"login\\\"></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>Conhecendo você</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content padding>\\r\\n  <ion-grid>\\r\\n    <!-- alinha no centro e define pra coluna a resolucao de acordo com o tamanho da tela -->\\r\\n    <ion-row justify-content-center>\\r\\n      <!-- Deixa responsivo -->\\r\\n      <ion-col\\r\\n        size-sm=\\\"8\\\"\\r\\n        size-md=\\\"12\\\"\\r\\n        size-lg=\\\"3\\\"\\r\\n        size-xl=\\\"3\\\"\\r\\n      >\\r\\n        <div class=\\\"ion-text-center\\\">\\r\\n          <ion-col\\r\\n            size=\\\"12\\\"\\r\\n            size-sm=\\\"6\\\"\\r\\n          >\\r\\n            <img\\r\\n              width=\\\"130px\\\"\\r\\n              height=\\\"100px\\\"\\r\\n              src=\\\"../../../assets/img/avp.png\\\"\\r\\n            >\\r\\n          </ion-col>\\r\\n        </div>\\r\\n        <form [formGroup]=\\\"formgroup\\\">\\r\\n\\r\\n          <!-- NOME -->\\r\\n          <ion-item>\\r\\n            <ion-icon\\r\\n              name=\\\"person\\\"\\r\\n              color=\\\"primary\\\"\\r\\n              slot=\\\"start\\\"\\r\\n            ></ion-icon>\\r\\n            <ion-input\\r\\n              type=\\\"text\\\"\\r\\n              name=\\\"nome\\\"\\r\\n              placeholder=\\\"Nome\\\"\\r\\n              autofocus=\\\"true\\\"\\r\\n              required\\r\\n              [(ngModel)]='todoUser.nome'\\r\\n              formControlName=\\\"nome\\\"\\r\\n            ></ion-input>\\r\\n              <div class=\\\"erro-mensagens\\\">\\r\\n              <ng-container *ngFor=\\\"let error of errorMensagens.nome\\\">\\r\\n                <div *ngIf=\\\"formgroup.get('nome').hasError(error.type) && (formgroup.get('nome').dirty || formgroup.get('nome').touched)\\\">{{ error.mensagem }}</div>\\r\\n              </ng-container>\\r\\n            </div>\\r\\n          </ion-item>\\r\\n\\r\\n           <!-- DATA DE NASCIMENTO -->\\r\\n          <ion-item>\\r\\n            <ion-icon\\r\\n              name=\\\"calendar\\\"\\r\\n              color=\\\"primary\\\"\\r\\n              slot=\\\"start\\\"\\r\\n            ></ion-icon>\\r\\n            <ion-label>Data de Nascimento</ion-label>\\r\\n            <ion-datetime\\r\\n              displayFormat=\\\"DD/MM/YYYY\\\"\\r\\n              [(ngModel)]='todoUser.dataNasc'\\r\\n              name=\\\"dataNascimento\\\"\\r\\n              formControlName=\\\"dataNascimento\\\"\\r\\n              required\\r\\n            >\\r\\n            </ion-datetime>\\r\\n              <div class=\\\"erro-mensagens\\\">\\r\\n              <ng-container *ngFor=\\\"let error of errorMensagens.dataNascimento\\\">\\r\\n                <div *ngIf=\\\"formgroup.get('dataNascimento').hasError(error.type) && (formgroup.get('dataNascimento').dirty || formgroup.get('dataNascimento').touched)\\\">{{ error.mensagem }}</div>\\r\\n              </ng-container>\\r\\n            </div>\\r\\n          </ion-item>\\r\\n\\r\\n          <!-- EMAIL -->\\r\\n          <ion-item>\\r\\n            <ion-icon\\r\\n              name=\\\"mail\\\"\\r\\n              color=\\\"primary\\\"\\r\\n              slot=\\\"start\\\"\\r\\n            ></ion-icon>\\r\\n            <ion-input\\r\\n              type=\\\"text\\\"\\r\\n              formControlName=\\\"email\\\"\\r\\n              placeholder=\\\"E-mail\\\"\\r\\n              [(ngModel)]='todoUser.email'\\r\\n              required\\r\\n            ></ion-input>\\r\\n            <div class=\\\"erro-mensagens\\\">\\r\\n              <ng-container *ngFor=\\\"let error of errorMensagens.email\\\">\\r\\n                <div *ngIf=\\\"formgroup.get('email').hasError(error.type) && (formgroup.get('email').dirty || formgroup.get('email').touched)\\\">{{ error.mensagem }}</div>\\r\\n              </ng-container>\\r\\n            </div>\\r\\n          </ion-item>\\r\\n\\r\\n\\r\\n          <!-- SENHA -->\\r\\n          <ion-item>\\r\\n            <ion-icon\\r\\n              name=\\\"lock\\\"\\r\\n              color=\\\"primary\\\"\\r\\n              slot=\\\"start\\\"\\r\\n            ></ion-icon>\\r\\n            <ion-input\\r\\n              type=\\\"password\\\"\\r\\n              formControlName=\\\"senha\\\"\\r\\n              placeholder=\\\"Senha\\\"\\r\\n              [(ngModel)]='todoUser.senha'\\r\\n              required\\r\\n            ></ion-input>\\r\\n            <div class=\\\"erro-mensagens\\\">\\r\\n              <ng-container *ngFor=\\\"let error of errorMensagens.senha\\\">\\r\\n                <div *ngIf=\\\"formgroup.get('senha').hasError(error.type) && (formgroup.get('senha').dirty || formgroup.get('senha').touched)\\\">{{ error.mensagem }}</div>\\r\\n              </ng-container>\\r\\n            </div>\\r\\n          </ion-item>\\r\\n\\r\\n\\r\\n          <!-- BOTÃO DE CADASTRO -->\\r\\n          <ion-button\\r\\n            expand=\\\"block\\\"\\r\\n            type=\\\"submit\\\"\\r\\n            class=\\\"login-button\\\"\\r\\n            (click)=\\\"concluiCadastro()\\\"\\r\\n            [disabled]=\\\"formgroup.invalid\\\"\\r\\n          >\\r\\n            Cadastrar\\r\\n          </ion-button>\\r\\n\\r\\n          <ion-card-content>\\r\\n            <div>\\r\\n              <ion-row>\\r\\n                <ion-card-title style=\\\"font-size: 11pt; text-align: center;\\\">É profissional da saúde ?</ion-card-title>\\r\\n                <ion-card-title\\r\\n                  style=\\\"font-size: 11pt;\\r\\n              text-align: left;\\r\\n              padding-left: 5px;\\r\\n              font-weight: bold ;\\r\\n              color: royalblue\\\"\\r\\n                  (click)=\\\"cadastroProfissional()\\\"\\r\\n                >\\r\\n                  Clique Aqui\\r\\n                </ion-card-title>\\r\\n              </ion-row>\\r\\n            </div>\\r\\n          </ion-card-content>\\r\\n\\r\\n\\r\\n        </form>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-grid>\\r\\n\\r\\n\\r\\n</ion-content>\\r\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UsuarioCadastroPage } from './usuario-cadastro.page';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UsuarioCadastroPage\n  }\n];\n\n@NgModule({\n  imports: [SharedModule, RouterModule.forChild(routes)],\n  declarations: [UsuarioCadastroPage]\n})\nexport class UsuarioCadastroPageModule {}\n","module.exports = \"ion-card ion-item {\\n  --border-radius: 10px;\\n}\\nion-card img {\\n  width: 70%;\\n  margin: auto;\\n}\\n.texto {\\n  color: black;\\n}\\n.erro-mensagens {\\n  font-size: 0.6em;\\n  color: red;\\n  text-align: left;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvdXN1YXJpby1jYWRhc3Ryby9EOlxcdGNjL3NyY1xcYXBwXFxwYWdlc1xcdXN1YXJpby1jYWRhc3Ryb1xcdXN1YXJpby1jYWRhc3Ryby5wYWdlLnNjc3MiLCJzcmMvYXBwL3BhZ2VzL3VzdWFyaW8tY2FkYXN0cm8vdXN1YXJpby1jYWRhc3Ryby5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0U7RUFDRSxxQkFBQTtBQ0FKO0FERUU7RUFDRSxVQUFBO0VBQ0EsWUFBQTtBQ0FKO0FES0E7RUFDRSxZQUFBO0FDRkY7QURLQTtFQUNFLGdCQUFBO0VBQ0EsVUFBQTtFQUNBLGdCQUFBO0FDRkYiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy91c3VhcmlvLWNhZGFzdHJvL3VzdWFyaW8tY2FkYXN0cm8ucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWNhcmQge1xyXG4gIGlvbi1pdGVte1xyXG4gICAgLS1ib3JkZXItcmFkaXVzOiAxMHB4O1xyXG4gIH1cclxuICBpbWd7XHJcbiAgICB3aWR0aDogNzAlO1xyXG4gICAgbWFyZ2luOiBhdXRvO1xyXG4gIH1cclxuXHJcbn1cclxuXHJcbi50ZXh0b3tcclxuICBjb2xvcjogYmxhY2s7XHJcbn1cclxuXHJcbi5lcnJvLW1lbnNhZ2Vuc3tcclxuICBmb250LXNpemU6IDAuNmVtO1xyXG4gIGNvbG9yOiByZWQ7XHJcbiAgdGV4dC1hbGlnbjogbGVmdDtcclxufVxyXG4iLCJpb24tY2FyZCBpb24taXRlbSB7XG4gIC0tYm9yZGVyLXJhZGl1czogMTBweDtcbn1cbmlvbi1jYXJkIGltZyB7XG4gIHdpZHRoOiA3MCU7XG4gIG1hcmdpbjogYXV0bztcbn1cblxuLnRleHRvIHtcbiAgY29sb3I6IGJsYWNrO1xufVxuXG4uZXJyby1tZW5zYWdlbnMge1xuICBmb250LXNpemU6IDAuNmVtO1xuICBjb2xvcjogcmVkO1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xufSJdfQ== */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgForm, FormGroup, FormBuilder, Validators, AbstractControl } from '@angular/forms';\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport { LoadingController, NavController } from '@ionic/angular';\nimport { UsuarioCadastro } from 'src/app/services/usuarioCadastro/usuarioCadastro';\nimport { UsuarioCadastroService } from 'src/app/services/usuarioCadastro/usuario-cadastro.service';\nimport { CoreModule } from 'src/app/core/core.module';\nimport { Network } from '@ionic-native/network/ngx';\n\n@Component({\n  selector: 'app-usuario-cadastro',\n  templateUrl: './usuario-cadastro.page.html',\n  styleUrls: ['./usuario-cadastro.page.scss']\n})\nexport class UsuarioCadastroPage implements OnInit {\n\n  public errorMensagens: any;\n  public uidUser: any;\n  public formgroup: FormGroup;\n  public email: AbstractControl;\n  public senha: AbstractControl;\n\n\n  constructor(\n    private afAuth: AngularFireAuth,\n    private usuarioService: UsuarioCadastroService,\n    private loadingController: LoadingController, // Substituir depois pelo overlayService (que é genérico)\n    private navCtrl: NavController,\n    private core: CoreModule,\n    public formBuilder: FormBuilder,\n    private network: Network,\n  ) { }\n\n  ngOnInit() {\n\n    this.errorMensagens = this.core.identForm;\n\n    this.formgroup = this.formBuilder.group({\n      email: ['', Validators.compose([\n        Validators.required,\n        Validators.minLength(6),\n        Validators.maxLength(30),\n        Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\n      ])],\n      senha: ['', Validators.compose([\n        Validators.required,\n        Validators.minLength(6),\n        Validators.maxLength(30),\n        Validators.pattern('^[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\n      ])],\n      nome: ['', Validators.compose([\n        Validators.required,\n        Validators.minLength(3),\n        Validators.maxLength(50),\n        //Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\n      ])],\n      dataNascimento: ['', Validators.compose([\n        Validators.required,\n       // Validators.minLength(6),\n      //  Validators.maxLength(30),\n       // Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\n      ])],\n      profissao: ['', Validators.compose([\n        Validators.required,\n        // Validators.minLength(6),\n        //  Validators.maxLength(30),\n        // Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\n      ])]\n    });\n    this.networkConnect();\n  }\n\n  async networkConnect() {\n    const loading = await this.loadingController.create({\n      message: 'Conectando com a Internet...'\n    })\n    this.network.onDisconnect().subscribe(() => {\n      loading.dismiss();\n    });\n  }\n\n  //FUNÇÃO PARA CADASTRAR NOVO USUARIO\n  async concluiCadastro() {\n    const loading = await this.loadingController.create({\n      //Trocar pelo overlay\n      message: 'Salvando dados...'\n    });\n\n    //PASSA OS DADOS PARA CADASTRAR O USUARIO E SEU ENDEREÇO ENQUANTO ISSO EXIBE UM LOADING\n    this.uidUser = this.usuarioService.addUsuarioTodo(this.todoUser).then(() => {\n      loading.dismiss();\n      this.navCtrl.navigateBack('login');\n    })\n      .catch((error: any) => {\n        this.core.identificaError(error.code);\n      });\n  }\n\n  async cadastroProfissional() {\n    this.navCtrl.navigateBack('profissional/cadastro');\n  }\n\n  //REFERÊNCIA A CLASS USUARIO\n  todoUser: UsuarioCadastro = {\n    nome: '',\n    dataNasc: null,\n    foto: '',\n    profissao: '',\n    email: '',\n    senha: '',\n    isAdmin: false,\n    isProfissional: false\n  };\n\n}"],"sourceRoot":""}