{"version":3,"sources":["./src/app/pages/profissional-perfil/profissional-perfil.page.html","./src/app/pages/profissional-perfil/profissional-perfil.module.ts","./src/app/pages/profissional-perfil/profissional-perfil.page.scss","./src/app/pages/profissional-perfil/profissional-perfil.page.ts"],"names":[],"mappings":";;;;;;;;;AAAA,u6CAAu6C,kBAAkB,g5BAAg5B,kBAAkB,yzBAAyzB,kBAAkB,syBAAsyB,kBAAkB,yhB;;;;;;;;;;;;;;;;;;;;ACAr7H;AACc;AACa;AACR;AAE5D,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,gFAAsB;KAClC;CACF,CAAC;AASF,IAAa,4BAA4B,GAAzC,MAAa,4BAA4B;CAAG;AAA/B,4BAA4B;IAPxC,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,yEAAY;YACZ,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;SAC9B;QACD,YAAY,EAAE,CAAC,gFAAsB,CAAC;KACvC,CAAC;GACW,4BAA4B,CAAG;AAAH;;;;;;;;;;;;ACnBzC,qCAAqC,0BAA0B,GAAG,gBAAgB,eAAe,iBAAiB,GAAG,UAAU,iBAAiB,GAAG,mBAAmB,qBAAqB,eAAe,qBAAqB,GAAG,6CAA6C,mxC;;;;;;;;;;;;;;;;;;;;;;;;;ACA7N;AACmC;AACc;AAChB;AAC/B;AAEA;AACQ;AACN;AAQtD,IAAa,sBAAsB,GAAnC,MAAa,sBAAsB;IAYjC,YACU,cAAsC,EACtC,iBAAoC,EAAE,yDAAyD;IAC/F,OAAsB,EACtB,IAAgB,EACjB,WAAwB,EACvB,OAAgB,EAChB,eAAgC,EAChC,IAAqB,EACrB,WAAwB;QARxB,mBAAc,GAAd,cAAc,CAAwB;QACtC,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,YAAO,GAAP,OAAO,CAAe;QACtB,SAAI,GAAJ,IAAI,CAAY;QACjB,gBAAW,GAAX,WAAW,CAAa;QACvB,YAAO,GAAP,OAAO,CAAS;QAChB,oBAAe,GAAf,eAAe,CAAiB;QAChC,SAAI,GAAJ,IAAI,CAAiB;QACrB,gBAAW,GAAX,WAAW,CAAa;QAkFlC,4BAA4B;QAC5B,aAAQ,GAAoB;YAC1B,IAAI,EAAE,EAAE;YACR,QAAQ,EAAE,IAAI;YACd,IAAI,EAAE,EAAE;YACR,SAAS,EAAE,EAAE;YACb,KAAK,EAAE,EAAE;YACT,KAAK,EAAE,EAAE;YACT,OAAO,EAAE,KAAK;YACd,cAAc,EAAE,KAAK;SACtB,CAAC;IA3FE,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC,WAAW,CAAC,GAAG;QAG5D,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;SAChC;QAED,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;QAE1C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACtC,KAAK,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC;oBAC7B,yDAAU,CAAC,QAAQ;oBACnB,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC;oBACvB,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC;oBACxB,yDAAU,CAAC,OAAO,CAAC,iDAAiD,CAAC;iBACtE,CAAC,CAAC;YACH,KAAK,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC;oBAC7B,yDAAU,CAAC,QAAQ;oBACnB,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC;oBACvB,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC;oBACxB,yDAAU,CAAC,OAAO,CAAC,gCAAgC,CAAC;iBACrD,CAAC,CAAC;YACH,IAAI,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC;oBAC5B,yDAAU,CAAC,QAAQ;oBACnB,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC;oBACvB,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC;iBAEzB,CAAC,CAAC;YACH,SAAS,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC;oBACjC,yDAAU,CAAC,QAAQ;oBACnB,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC;oBACvB,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC;iBAEzB,CAAC,CAAC;SACJ,CAAC,CAAC;IAEL,CAAC;IAEK,QAAQ,CAAC,OAAe;;YAC5B,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC;gBAClD,OAAO,EAAE,8BAA8B;aACxC,CAAC,CAAC;YACH,MAAM,OAAO,CAAC,OAAO,EAAE,CAAC;YAExB,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;gBACtD,OAAO,CAAC,OAAO,EAAE,CAAC;gBAClB,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;YACtB,CAAC,CAAC,CAAC;QACL,CAAC;KAAA;IAEK,QAAQ;;YACZ,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC;gBAClD,OAAO,EAAE,4BAA4B;aACtC,CAAC,CAAC;YACH,MAAM,OAAO,CAAC,OAAO,EAAE,CAAC;YAExB,IAAI,IAAI,CAAC,SAAS,EAAE;gBAElB,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;oBACzG,OAAO,CAAC,OAAO,EAAE,CAAC;oBAClB,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;gBACzC,CAAC,CAAC,CAAC;aACJ;QAEH,CAAC;KAAA;IAEK,YAAY,CAAC,GAAW;;YAC5B,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;gBAC9C,OAAO,EAAE,GAAG;gBACZ,QAAQ,EAAE,IAAI;gBACd,QAAQ,EAAE,KAAK;aAChB,CAAC,CAAC;YACH,KAAK,CAAC,OAAO,EAAE,CAAC;QAClB,CAAC;KAAA;IACK,oBAAoB;;YACxB,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,uBAAuB,CAAC,CAAC;QACrD,CAAC;KAAA;CAcF;;YAtG2B,gHAAsB;YACnB,gEAAiB;YAC3B,4DAAa;YAChB,mEAAU;YACJ,0DAAW;YACd,iEAAO;YACC,8DAAe;YAC1B,iEAAe;YACR,yEAAW;;AArBvB,sBAAsB;IALlC,+DAAS,CAAC;QACT,QAAQ,EAAE,yBAAyB;QACnC,uLAA8C;;KAE/C,CAAC;2EAc0B,gHAAsB;QACnB,gEAAiB;QAC3B,4DAAa;QAChB,mEAAU;QACJ,0DAAW;QACd,iEAAO;QACC,8DAAe;QAC1B,iEAAe;QACR,yEAAW;GArBvB,sBAAsB,CAmHlC;AAnHkC","file":"profissional-perfil-profissional-perfil-module-es2015.js","sourcesContent":["module.exports = \"<ion-header>\\r\\n  <ion-toolbar color=\\\"light\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button defaultHref=\\\"menu/home\\\"></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>Atualizar informações</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content padding>\\r\\n  <ion-grid>\\r\\n    <!-- alinha no centro e define pra coluna a resolucao de acordo com o tamanho da tela -->\\r\\n    <ion-row justify-content-center>\\r\\n      <!-- Deixa responsivo -->\\r\\n      <ion-col\\r\\n        size-sm=\\\"8\\\"\\r\\n        size-md=\\\"12\\\"\\r\\n        size-lg=\\\"3\\\"\\r\\n        size-xl=\\\"3\\\"\\r\\n      >\\r\\n        <form [formGroup]=\\\"formgroup\\\">\\r\\n\\r\\n          <!-- NOME -->\\r\\n          <ion-item>\\r\\n            <ion-icon\\r\\n              name=\\\"person\\\"\\r\\n              color=\\\"dark\\\"\\r\\n              slot=\\\"start\\\"\\r\\n            ></ion-icon>\\r\\n            <ion-input\\r\\n              type=\\\"text\\\"\\r\\n              name=\\\"nome\\\"\\r\\n              placeholder=\\\"Nome\\\"\\r\\n              autofocus=\\\"true\\\"\\r\\n              required\\r\\n              [(ngModel)]='todoUser.nome'\\r\\n              formControlName=\\\"nome\\\"\\r\\n            ></ion-input>\\r\\n            <div class=\\\"erro-mensagens\\\">\\r\\n              <ng-container *ngFor=\\\"let error of errorMensagens.nome\\\">\\r\\n                <div *ngIf=\\\"formgroup.get('nome').hasError(error.type) && (formgroup.get('nome').dirty || formgroup.get('nome').touched)\\\">{{ error.mensagem }}</div>\\r\\n              </ng-container>\\r\\n            </div>\\r\\n          </ion-item>\\r\\n\\r\\n              <!-- PROFISSÃO -->\\r\\n              <ion-item>\\r\\n                <ion-icon\\r\\n                  name=\\\"md-briefcase\\\"\\r\\n                  color=\\\"dark\\\"\\r\\n                  slot=\\\"start\\\"\\r\\n                ></ion-icon>\\r\\n                <ion-input\\r\\n                  type=\\\"text\\\"\\r\\n                  formControlName=\\\"profissao\\\"\\r\\n                  placeholder=\\\"Profissão\\\"\\r\\n                  [(ngModel)]=\\\"todoUser.profissao\\\"\\r\\n                  required\\r\\n                ></ion-input>\\r\\n                <div class=\\\"erro-mensagens\\\">\\r\\n                  <ng-container *ngFor=\\\"let error of errorMensagens.profissao\\\">\\r\\n                    <div *ngIf=\\\"formgroup.get('profissao').hasError(error.type) && (formgroup.get('profissao').dirty || formgroup.get('profissao').touched)\\\">{{ error.mensagem }}</div>\\r\\n                  </ng-container>\\r\\n                </div>\\r\\n              </ion-item>\\r\\n\\r\\n      \\r\\n          <!-- EMAIL -->\\r\\n          <ion-item>\\r\\n            <ion-icon\\r\\n              name=\\\"mail\\\"\\r\\n              color=\\\"dark\\\"\\r\\n              slot=\\\"start\\\"\\r\\n            ></ion-icon>\\r\\n            <ion-input\\r\\n              type=\\\"text\\\"\\r\\n              formControlName=\\\"email\\\"\\r\\n              placeholder=\\\"E-mail\\\"\\r\\n              [(ngModel)]='todoUser.email'\\r\\n              required\\r\\n            ></ion-input>\\r\\n            <div class=\\\"erro-mensagens\\\">\\r\\n              <ng-container *ngFor=\\\"let error of errorMensagens.email\\\">\\r\\n                <div *ngIf=\\\"formgroup.get('email').hasError(error.type) && (formgroup.get('email').dirty || formgroup.get('email').touched)\\\">{{ error.mensagem }}</div>\\r\\n              </ng-container>\\r\\n            </div>\\r\\n          </ion-item>\\r\\n\\r\\n          <!-- SENHA -->\\r\\n          <ion-item>\\r\\n            <ion-icon\\r\\n              name=\\\"lock\\\"\\r\\n              color=\\\"dark\\\"\\r\\n              slot=\\\"start\\\"\\r\\n            ></ion-icon>\\r\\n            <ion-input\\r\\n              type=\\\"password\\\"\\r\\n              formControlName=\\\"senha\\\"\\r\\n              placeholder=\\\"Senha\\\"\\r\\n              [(ngModel)]='todoUser.senha'\\r\\n              required\\r\\n            ></ion-input>\\r\\n            <div class=\\\"erro-mensagens\\\">\\r\\n              <ng-container *ngFor=\\\"let error of errorMensagens.senha\\\">\\r\\n                <div *ngIf=\\\"formgroup.get('senha').hasError(error.type) && (formgroup.get('senha').dirty || formgroup.get('senha').touched)\\\">{{ error.mensagem }}</div>\\r\\n              </ng-container>\\r\\n            </div>\\r\\n          </ion-item>\\r\\n\\r\\n          <!-- BOTÃO DE CADASTRO -->\\r\\n          <ion-button\\r\\n            expand=\\\"block\\\"\\r\\n            type=\\\"submit\\\"\\r\\n            class=\\\"login-button\\\"\\r\\n            (click)=\\\"saveTodo()\\\"\\r\\n            color=\\\"light\\\"\\r\\n            [disabled]=\\\"formgroup.invalid\\\"\\r\\n          >\\r\\n            Atualizar\\r\\n          </ion-button>\\r\\n        </form>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-grid>\\r\\n</ion-content>\\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ProfissionalPerfilPage } from './profissional-perfil.page';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ProfissionalPerfilPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [ProfissionalPerfilPage]\r\n})\r\nexport class ProfissionalPerfilPageModule {}\r\n","module.exports = \"ion-card ion-item {\\n  --border-radius: 10px;\\n}\\nion-card img {\\n  width: 70%;\\n  margin: auto;\\n}\\n.texto {\\n  color: black;\\n}\\n.erro-mensagens {\\n  font-size: 0.6em;\\n  color: red;\\n  text-align: left;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvcHJvZmlzc2lvbmFsLXBlcmZpbC9EOlxcbWFyY29zXFxUQ0NcXHRjYy9zcmNcXGFwcFxccGFnZXNcXHByb2Zpc3Npb25hbC1wZXJmaWxcXHByb2Zpc3Npb25hbC1wZXJmaWwucGFnZS5zY3NzIiwic3JjL2FwcC9wYWdlcy9wcm9maXNzaW9uYWwtcGVyZmlsL3Byb2Zpc3Npb25hbC1wZXJmaWwucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNJO0VBQ0UscUJBQUE7QUNBTjtBREVJO0VBQ0UsVUFBQTtFQUNBLFlBQUE7QUNBTjtBREtFO0VBQ0UsWUFBQTtBQ0ZKO0FES0U7RUFDRSxnQkFBQTtFQUNBLFVBQUE7RUFDQSxnQkFBQTtBQ0ZKIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvcHJvZmlzc2lvbmFsLXBlcmZpbC9wcm9maXNzaW9uYWwtcGVyZmlsLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi1jYXJkIHtcclxuICAgIGlvbi1pdGVte1xyXG4gICAgICAtLWJvcmRlci1yYWRpdXM6IDEwcHg7XHJcbiAgICB9XHJcbiAgICBpbWd7XHJcbiAgICAgIHdpZHRoOiA3MCU7XHJcbiAgICAgIG1hcmdpbjogYXV0bztcclxuICAgIH1cclxuICBcclxuICB9XHJcbiAgXHJcbiAgLnRleHRve1xyXG4gICAgY29sb3I6IGJsYWNrO1xyXG4gIH1cclxuICBcclxuICAuZXJyby1tZW5zYWdlbnN7XHJcbiAgICBmb250LXNpemU6IDAuNmVtO1xyXG4gICAgY29sb3I6IHJlZDtcclxuICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgfVxyXG4gICIsImlvbi1jYXJkIGlvbi1pdGVtIHtcbiAgLS1ib3JkZXItcmFkaXVzOiAxMHB4O1xufVxuaW9uLWNhcmQgaW1nIHtcbiAgd2lkdGg6IDcwJTtcbiAgbWFyZ2luOiBhdXRvO1xufVxuXG4udGV4dG8ge1xuICBjb2xvcjogYmxhY2s7XG59XG5cbi5lcnJvLW1lbnNhZ2VucyB7XG4gIGZvbnQtc2l6ZTogMC42ZW07XG4gIGNvbG9yOiByZWQ7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, AbstractControl, FormBuilder, Validators } from '@angular/forms';\r\nimport { UsuarioCadastroService } from 'src/app/services/usuarioCadastro/usuario-cadastro.service';\r\nimport { LoadingController, NavController, ToastController } from '@ionic/angular';\r\nimport { Network } from '@ionic-native/network/ngx';\r\nimport { toastController } from '@ionic/core';\r\nimport { AngularFireAuth } from 'angularfire2/auth';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { CoreModule } from 'src/app/core/core.module';\r\nimport { UsuarioCadastro } from 'src/app/services/usuarioCadastro/usuarioCadastro';\r\n\r\n@Component({\r\n  selector: 'app-profissional-perfil',\r\n  templateUrl: './profissional-perfil.page.html',\r\n  styleUrls: ['./profissional-perfil.page.scss'],\r\n})\r\nexport class ProfissionalPerfilPage implements OnInit {\r\n\r\n  public idUsuario: string;\r\n  private uidUsuario: string;\r\n\r\n  public errorMensagens: any;\r\n  public uidUser: any;\r\n  public formgroup: FormGroup;\r\n  public email: AbstractControl;\r\n  public senha: AbstractControl;\r\n\r\n\r\n  constructor(\r\n    private usuarioService: UsuarioCadastroService,\r\n    private loadingController: LoadingController, // Substituir depois pelo overlayService (que é genérico)\r\n    private navCtrl: NavController,\r\n    private core: CoreModule,\r\n    public formBuilder: FormBuilder,\r\n    private network: Network,\r\n    private toastController: ToastController,\r\n    private auth: AngularFireAuth,\r\n    private authService: AuthService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.uidUsuario = this.authService.getAuth().currentUser.uid\r\n\r\n\r\n    if (this.uidUsuario) {\r\n      this.loadTodo(this.uidUsuario);\r\n    }\r\n\r\n    this.errorMensagens = this.core.identForm;\r\n\r\n    this.formgroup = this.formBuilder.group({\r\n      email: ['', Validators.compose([\r\n        Validators.required,\r\n        Validators.minLength(6),\r\n        Validators.maxLength(30),\r\n        Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\r\n      ])],\r\n      senha: ['', Validators.compose([\r\n        Validators.required,\r\n        Validators.minLength(6),\r\n        Validators.maxLength(30),\r\n        Validators.pattern('^[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\r\n      ])],\r\n      nome: ['', Validators.compose([\r\n        Validators.required,\r\n        Validators.minLength(3),\r\n        Validators.maxLength(50),\r\n        //Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\r\n      ])],\r\n      profissao: ['', Validators.compose([\r\n        Validators.required,\r\n        Validators.minLength(6),\r\n        Validators.maxLength(30),\r\n        // Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\r\n      ])]\r\n    });\r\n\r\n  }\r\n\r\n  async loadTodo(uidUser: string) {\r\n    const loading = await this.loadingController.create({\r\n      message: 'Carregando suas informações.'\r\n    });\r\n    await loading.present();\r\n\r\n    this.usuarioService.getUsuario(uidUser).subscribe(res => {\r\n      loading.dismiss();\r\n      this.todoUser = res;\r\n    });\r\n  }\r\n\r\n  async saveTodo() {\r\n    const loading = await this.loadingController.create({\r\n      message: 'Salvando novas informações'\r\n    });\r\n    await loading.present();\r\n\r\n    if (this.idUsuario) {\r\n\r\n      this.usuarioService.updateUsuarioTodo(this.todoUser, this.authService.getAuth().currentUser.uid).then(() => {\r\n        loading.dismiss();\r\n        this.navCtrl.navigateBack('menu/home');\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  async presentToast(msg: string) {\r\n    const toast = await this.toastController.create({\r\n      message: msg,\r\n      duration: 4000,\r\n      position: 'top'\r\n    });\r\n    toast.present();\r\n  }\r\n  async cadastroProfissional() {\r\n    this.navCtrl.navigateBack('profissional/cadastro');\r\n  }\r\n\r\n  //REFERÊNCIA A CLASS USUARIO\r\n  todoUser: UsuarioCadastro = {\r\n    nome: '',\r\n    dataNasc: null,\r\n    foto: '',\r\n    profissao: '',\r\n    email: '',\r\n    senha: '',\r\n    isAdmin: false,\r\n    isProfissional: false\r\n  };\r\n\r\n}"],"sourceRoot":""}