{"version":3,"sources":["./src/app/pages/login/login.page.html","./src/app/core/overlay.service.ts","./src/app/pages/login/login.module.ts","./src/app/pages/login/login.page.scss","./src/app/pages/login/login.page.ts","./src/app/services/user.ts","./src/app/shared/components/logout-button/logout-button.component.ts","./src/app/shared/components/menu-toggle/menu-toggle.component.ts","./src/app/shared/shared.module.ts"],"names":[],"mappings":"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","file":"pages-login-login-module-es5.js","sourcesContent":["module.exports = \"<ion-content padding>\\n  <ion-grid>\\n    <!-- alinha no centro e define pra coluna a resolucao de acordo com o tamanho da tela -->\\n    <ion-row justify-content-center>\\n      <ion-col\\n        size-sm=\\\"8\\\"\\n        size-md=\\\"12\\\"\\n        size-lg=\\\"3\\\"\\n        size-xl=\\\"3\\\"\\n      >\\n        <ion-item>\\n          <img\\n            style=\\\"width: auto; height: auto\\\"\\n            src=\\\"../../../assets/img/avp.png\\\"\\n          >\\n        </ion-item>\\n\\n        <form #form=\\\"ngForm\\\">\\n          <ion-item>\\n            <ion-icon\\n              name=\\\"mail\\\"\\n              color=\\\"primary\\\"\\n              slot=\\\"start\\\"\\n            ></ion-icon>\\n            <ion-input\\n              type=\\\"email\\\"\\n              name=\\\"email\\\"\\n              placeholder=\\\"Informe seu e-mail\\\"\\n              inputmode=\\\"email\\\"\\n              autofocus=\\\"true\\\"\\n              [(ngModel)]=\\\"user.email\\\"\\n              required\\n            ></ion-input>\\n          </ion-item>\\n\\n          <ion-item>\\n            <ion-icon\\n              name=\\\"lock\\\"\\n              color=\\\"primary\\\"\\n              slot=\\\"start\\\"\\n            ></ion-icon>\\n            <ion-input\\n              type=\\\"password\\\"\\n              name=\\\"password\\\"\\n              placeholder=\\\"Informe sua senha\\\"\\n              [(ngModel)]=\\\"user.password\\\"\\n              required\\n            ></ion-input>\\n          </ion-item>\\n\\n          <ion-button\\n            expand=\\\"block\\\"\\n            type=\\\"submit\\\"\\n            class=\\\"login-button\\\"\\n            (click)=\\\"signIn()\\\"\\n          >\\n            Acessar\\n          </ion-button>\\n        </form>\\n\\n        <ion-button\\n          expand=\\\"block\\\"\\n          fill=\\\"clear\\\"\\n          (click)=\\\"createAccount()\\\"\\n        >\\n          Participar\\n        </ion-button>\\n       <!-- Sem loggin com facebook\\n        <ion-button expand=\\\"block\\\">\\n          <ion-icon\\n            name=\\\"logo-facebook\\\"\\n            slot=\\\"start\\\"\\n          ></ion-icon>\\n          Login com Facebook\\n        </ion-button>\\n      -->\\n\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n\\n</ion-content>\\n\"","import { Injectable } from '@angular/core';\r\nimport { AlertController, LoadingController, ToastController } from '@ionic/angular';\r\nimport { AlertOptions, LoadingOptions, ToastOptions } from '@ionic/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OverlayService {\r\n  constructor(\r\n    private alertCtrl: AlertController,\r\n    private loadingCtrl: LoadingController,\r\n    private toastCtrl: ToastController\r\n  ) {}\r\n\r\n  async alert(options?: AlertOptions): Promise<HTMLIonAlertElement> {\r\n    const alert = await this.alertCtrl.create(options);\r\n    await alert.present();\r\n    return alert;\r\n  }\r\n\r\n  async loading(options?: LoadingOptions): Promise<HTMLIonLoadingElement> {\r\n    const loading = await this.loadingCtrl.create({\r\n      message: 'Loading...',\r\n      ...options\r\n    });\r\n    await loading.present();\r\n    loading.dismiss();\r\n    return loading;\r\n  }\r\n\r\n  async toast(options?: ToastOptions): Promise<HTMLIonToastElement> {\r\n    const toast = await this.toastCtrl.create({\r\n      position: 'bottom',\r\n      duration: 3000,\r\n      showCloseButton: true,\r\n      closeButtonText: 'Ok',\r\n      ...options\r\n    });\r\n    await toast.present();\r\n    return toast;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginPage } from './login.page';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [SharedModule, RouterModule.forChild(routes)],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2xvZ2luL2xvZ2luLnBhZ2Uuc2NzcyJ9 */\"","import { Component, ViewChild } from '@angular/core';\nimport { User } from 'src/app/services/user';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { ToastController } from '@ionic/angular';\nimport { Network } from '@ionic-native/network/ngx';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss']\n})\nexport class LoginPage {\n  user: User = new User();\n  @ViewChild('form', null) form: NgForm;\n\n  constructor(\n    public router: Router,\n    private authService: AuthService,\n    private toastController: ToastController,\n    private network: Network\n  ) {\n    let disconnectSubscription = this.network.onDisconnect().subscribe(() => {\n      this.presentToast('NetWork Desconectada! :-(');\n    });\n  }\n  async presentToast(msg: string) {\n    const toast = await this.toastController.create({\n      message: msg,\n      duration: 2000\n    });\n    toast.present();\n  }\n\n  createAccount() {\n    this.router.navigate(['usuario/cadastro']);\n  }\n\n  signIn() {\n    if (this.form.form.valid) {\n      this.authService\n        .signIn(this.user)\n        .then(() => {\n          this.router.navigate(['assistente/cadastro']);\n        })\n        .catch((error: any) => {\n          if (error.code == 'auth/invalid-email') {\n            this.presentToast('E-mail invalido');\n          } else if (error.code == 'auth/user-disabled') {\n            this.presentToast('Usuario desativado');\n          } else if (error.code == 'auth/user-not-found') {\n            this.presentToast('Usuario não encontrado');\n          } else if (error.code == 'auth/wrong-password') {\n            this.presentToast('Senha invalida');\n          }\n        });\n    }\n  }\n}\n","export class User {\r\n  email: string;\r\n  password: string;\r\n}\r\n","import { NavController, MenuController } from '@ionic/angular';\nimport { OnInit, Component, Input } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { OverlayService } from 'src/app/core/overlay.service';\n\n@Component({\n  selector: 'app-logout-button',\n  template: `\n    <ion-buttons>\n      <ion-button (click)=\"logout()\">\n        <ion-icon name=\"exit\" slot=\"icon-only\"></ion-icon>\n      </ion-button>\n    </ion-buttons>\n  `\n})\nexport class LogoutButtonComponent implements OnInit {\n  @Input() menuId: string; // Vai receber um valor do menu que será utilizado (AQUI MANDA OS OUTROS TIPO DE MENU DE ACORDO COM O USUÁRIO ??)\n\n  constructor(\n    private authService: AuthService,\n    private menuCtrl: MenuController,\n    private navCtrl: NavController,\n    private overlayService: OverlayService\n  ) {}\n\n  async ngOnInit(): Promise<void> {\n    if (!(await this.menuCtrl.isEnabled(this.menuId))) {\n      //Checka se o menu esta habilitado\n      this.menuCtrl.enable(true, this.menuId); // Se não estiver, indica o  id   do menu q qer habilitar\n    }\n  }\n\n  async logout(): Promise<void> {\n    await this.overlayService.alert({\n      //Apresenta a mensagem\n      message: 'Deseja mesmo sair ?',\n      buttons: [\n        {\n          text: 'Sim', //caso sim\n          handler: async () => {\n            await this.authService.signOut(); // chama o método de deslogar criado\n            /* AULA 95 ->\n            Se usário estiver deslogado, desabilita o login\n            #USAR PARA TIPOS DE USUÁRIO NO FUTURO ???\n            */\n            await this.menuCtrl.enable(false, this.menuId);\n            // this.navCtrl.navigateRoot('login'); // Finaliza as paginas e dieciona pro login\n          }\n        },\n        'Não' // Não faz nada e segue a execução\n      ]\n    });\n  }\n}\n","/* AULA 92 -> Componente genérico de menu, que pode ser chamado em qualquer momento na aplicação */\nimport { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-menu-toggle',\n  /* Usando HTML inline, não necessitdando de arquivos externos */\n  template: `\n    <ion-buttons>\n      <ion-menu-toggle [menu]=\"menu\">\n        <ion-button>\n          <ion-icon slot=\"icon-only\" name=\"menu\"></ion-icon>\n        </ion-button>\n      </ion-menu-toggle>\n    </ion-buttons>\n  `\n})\nexport class MenuToggleComponent {\n  @Input() menu: string;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { MenuToggleComponent } from './components/menu-toggle/menu-toggle.component';\nimport { LogoutButtonComponent } from './components/logout-button/logout-button.component';\n\n@NgModule({\n  declarations: [LogoutButtonComponent, MenuToggleComponent],\n  imports: [IonicModule],\n  exports: [\n    CommonModule,\n    ReactiveFormsModule,\n    IonicModule,\n    LogoutButtonComponent,\n    MenuToggleComponent,\n    FormsModule\n  ]\n})\nexport class SharedModule {}\n"],"sourceRoot":""}