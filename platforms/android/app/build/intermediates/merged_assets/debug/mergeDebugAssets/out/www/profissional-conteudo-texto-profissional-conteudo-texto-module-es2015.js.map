{"version":3,"sources":["./src/app/pages/profissional-conteudo-texto/profissional-conteudo-texto.page.html","./src/app/core/overlay.service.ts","./src/app/pages/profissional-conteudo-texto/profissional-conteudo-texto.module.ts","./src/app/pages/profissional-conteudo-texto/profissional-conteudo-texto.page.scss","./src/app/pages/profissional-conteudo-texto/profissional-conteudo-texto.page.ts","./src/app/shared/components/logout-button/logout-button.component.ts","./src/app/shared/components/menu-toggle/menu-toggle.component.ts","./src/app/shared/shared.module.ts"],"names":[],"mappings":"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","file":"profissional-conteudo-texto-profissional-conteudo-texto-module-es2015.js","sourcesContent":["module.exports = \"<ion-content>\\r\\n  <ion-grid>\\r\\n    <!-- alinha no centro e define pra coluna a resolucao de acordo com o tamanho da tela -->\\r\\n\\r\\n\\r\\n        <form #form=\\\"ngForm\\\">\\r\\n          <ion-card>\\r\\n            <ion-card-header style=\\\"background-color: #f2e57f\\r\\n\\r\\n;\\\">\\r\\n              <ion-card-title style=\\\"font-size: 17px; text-align: center;\\\">Divulgue uma frase de apoio</ion-card-title>\\r\\n            </ion-card-header>\\r\\n            <ion-item>\\r\\n              <ion-icon\\r\\n                name=\\\"ios-bulb\\\"\\r\\n                color=\\\"amareloprofissional\\\"\\r\\n                slot=\\\"start\\\"\\r\\n              ></ion-icon>\\r\\n              <ion-textarea\\r\\n                name=\\\"texto\\\"\\r\\n                autofocus=\\\"true\\\"\\r\\n                [(ngModel)]=\\\"todas.texto\\\"\\r\\n                required\\r\\n                rows=\\\"3\\\"\\r\\n                cols=\\\"10\\\"\\r\\n                placeholder=\\\"Utilize este espaço para escrever...\\\"\\r\\n              ></ion-textarea>\\r\\n            </ion-item>\\r\\n          </ion-card>\\r\\n\\r\\n          <ion-item\\r\\n            href\\r\\n            class=\\\"activated\\\"\\r\\n            color=\\\"amareloprofissional\\\"\\r\\n          >\\r\\n            <ion-toggle\\r\\n              [(ngModel)]=\\\"mostraMaisInfo\\\"\\r\\n              (ionChange)=\\\"changeMaisInfo()\\\"\\r\\n              color=\\\"medium\\\"\\r\\n              slot=\\\"end\\\"\\r\\n              name=\\\"maisInfo\\\"\\r\\n            ></ion-toggle>\\r\\n            <ion-label class=\\\"ion-text-center\\\">Preencher mais informações</ion-label>\\r\\n          </ion-item>\\r\\n\\r\\n          <ion-card\\r\\n            style=\\\"background-color: #f2e57f\\r\\n;\\\"\\r\\n            *ngIf=\\\"mostraMaisInfo\\\"\\r\\n          >\\r\\n            <ion-item>\\r\\n              <ion-icon\\r\\n                name=\\\"add\\\"\\r\\n                slot=\\\"start\\\"\\r\\n                color=\\\"amareloprofissional\\\"\\r\\n              >\\r\\n              </ion-icon>\\r\\n              <ion-input\\r\\n                type=\\\"text\\\"\\r\\n                name=\\\"tituloTexo\\\"\\r\\n                placeholder=\\\"Titulo\\\"\\r\\n                autofocus=\\\"true\\\"\\r\\n                [(ngModel)]=\\\"todas.tituloTexto\\\"\\r\\n                required\\r\\n              ></ion-input>\\r\\n            </ion-item>\\r\\n\\r\\n            <ion-item>\\r\\n              <ion-icon\\r\\n                name=\\\"add\\\"\\r\\n                slot=\\\"start\\\"\\r\\n                color=\\\"amareloprofissional\\\"\\r\\n              >\\r\\n              </ion-icon>\\r\\n              <ion-input\\r\\n                type=\\\"text\\\"\\r\\n                name=\\\"autorTexto\\\"\\r\\n                placeholder=\\\"Autor do texto\\\"\\r\\n                autofocus=\\\"true\\\"\\r\\n                [(ngModel)]=\\\"todas.autorTexto\\\"\\r\\n                required\\r\\n              ></ion-input>\\r\\n            </ion-item>\\r\\n\\r\\n            <ion-item>\\r\\n              <ion-icon\\r\\n                name=\\\"add\\\"\\r\\n                color=\\\"amareloprofissional\\\"\\r\\n                slot=\\\"start\\\"\\r\\n              ></ion-icon>\\r\\n              <ion-textarea\\r\\n                name=\\\"maisInfo\\\"\\r\\n                autofocus=\\\"true\\\"\\r\\n                [(ngModel)]=\\\"todas.maisInfoTexto\\\"\\r\\n                required\\r\\n                rows=\\\"2\\\"\\r\\n                cols=\\\"5\\\"\\r\\n                placeholder=\\\"Informações complementares...\\\"\\r\\n              ></ion-textarea>\\r\\n            </ion-item>\\r\\n          </ion-card>\\r\\n\\r\\n          <ion-item\\r\\n            href\\r\\n            class=\\\"activated\\\"\\r\\n            color=\\\"amareloprofissional\\\"\\r\\n          >\\r\\n            <ion-toggle\\r\\n              [(ngModel)]=\\\"mostraFiltro\\\"\\r\\n              (ionChange)=\\\"changeFiltro()\\\"\\r\\n              color=\\\"medium\\\"\\r\\n              slot=\\\"end\\\"\\r\\n              name=\\\"filtro\\\"\\r\\n            ></ion-toggle>\\r\\n            <ion-label class=\\\"ion-text-center\\\">Filtro de Conteúdos</ion-label>\\r\\n          </ion-item>\\r\\n\\r\\n          <ion-card *ngIf=\\\"mostraFiltro\\\">\\r\\n            <ion-card-header style=\\\"background-color: #f2e57f\\r\\n\\r\\n;\\\">\\r\\n              <ion-card-title style=\\\"font-size: 17px; text-align: center;\\\">Faixa etária destinada</ion-card-title>\\r\\n            </ion-card-header>\\r\\n\\r\\n            <ion-radio-group\\r\\n              [(ngModel)]=\\\"todas.idade\\\"\\r\\n              name=\\\"selecionaIdade\\\"\\r\\n              color=\\\"amareloprofissional\\\"\\r\\n            >\\r\\n              <ion-item>\\r\\n                <ion-label>8 a 12 anos</ion-label>\\r\\n                <ion-radio\\r\\n                  name=\\\"8a12\\\"\\r\\n                  value=\\\"8 a 12\\\"\\r\\n                  slot=\\\"start\\\"\\r\\n                  color=\\\"amareloprofissional\\\"\\r\\n                ></ion-radio>\\r\\n              </ion-item>\\r\\n\\r\\n              <ion-item>\\r\\n                <ion-label>13 a 17 anos</ion-label>\\r\\n                <ion-radio\\r\\n                  name=\\\"13a17\\\"\\r\\n                  value=\\\"13 a 17\\\"\\r\\n                  slot=\\\"start\\\"\\r\\n                  color=\\\"amareloprofissional\\\"\\r\\n                ></ion-radio>\\r\\n              </ion-item>\\r\\n\\r\\n              <ion-item>\\r\\n                <ion-label>18 anos ou mais</ion-label>\\r\\n                <ion-radio\\r\\n                  name=\\\"18a35\\\"\\r\\n                  value=\\\"18 anos ou mais\\\"\\r\\n                  slot=\\\"start\\\"\\r\\n                  color=\\\"amareloprofissional\\\"\\r\\n                ></ion-radio>\\r\\n              </ion-item>\\r\\n            </ion-radio-group>\\r\\n\\r\\n            <ion-card-header style=\\\"background-color: #f2e57f\\r\\n\\r\\n;\\\">\\r\\n              <ion-card-title style=\\\"font-size: 17px; text-align: center;\\\">Avaliação do usuário</ion-card-title>\\r\\n            </ion-card-header>\\r\\n\\r\\n            <ion-row>\\r\\n              <ion-item\\r\\n                *ngFor=\\\"let star of stars; let i = index\\\"\\r\\n                tappable\\r\\n                (click)=\\\"starClicked(i)\\\"\\r\\n              >\\r\\n                <ion-icon\\r\\n                  [name]=\\\"star\\\"\\r\\n                  color=\\\"amareloprofissional\\\"\\r\\n                ></ion-icon>\\r\\n              </ion-item>\\r\\n            </ion-row>\\r\\n          </ion-card>\\r\\n\\r\\n          <ion-button\\r\\n            expand=\\\"block\\\"\\r\\n            type=\\\"submit\\\"\\r\\n            class=\\\"login-button\\\"\\r\\n            (click)=\\\"saveTodo()\\\"\\r\\n            color=\\\"dark\\\"\\r\\n          >\\r\\n            Criar conteúdo\\r\\n          </ion-button>\\r\\n        </form>\\r\\n\\r\\n\\r\\n  </ion-grid>\\r\\n</ion-content>\\r\\n\"","import { Injectable } from '@angular/core';\r\nimport { AlertController, LoadingController, ToastController } from '@ionic/angular';\r\nimport { AlertOptions, LoadingOptions, ToastOptions } from '@ionic/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OverlayService {\r\n  constructor(\r\n    private alertCtrl: AlertController,\r\n    private loadingCtrl: LoadingController,\r\n    private toastCtrl: ToastController\r\n  ) {}\r\n\r\n  async alert(options?: AlertOptions): Promise<HTMLIonAlertElement> {\r\n    const alert = await this.alertCtrl.create(options);\r\n    await alert.present();\r\n    return alert;\r\n  }\r\n\r\n  async loading(options?: LoadingOptions): Promise<HTMLIonLoadingElement> {\r\n    const loading = await this.loadingCtrl.create({\r\n      message: 'Loading...',\r\n      ...options\r\n    });\r\n    await loading.present();\r\n    loading.dismiss();\r\n    return loading;\r\n  }\r\n\r\n  async toast(options?: ToastOptions): Promise<HTMLIonToastElement> {\r\n    const toast = await this.toastCtrl.create({\r\n      position: 'bottom',\r\n      duration: 3000,\r\n      showCloseButton: true,\r\n      closeButtonText: 'Ok',\r\n      ...options\r\n    });\r\n    await toast.present();\r\n    return toast;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ProfissionalConteudoTextoPage } from './profissional-conteudo-texto.page';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProfissionalConteudoTextoPage\n  }\n];\n\n@NgModule({\n  imports: [SharedModule, RouterModule.forChild(routes)],\n  declarations: [ProfissionalConteudoTextoPage]\n})\nexport class ProfissionalConteudoTextoPageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3Byb2Zpc3Npb25hbC1jb250ZXVkby10ZXh0by9wcm9maXNzaW9uYWwtY29udGV1ZG8tdGV4dG8ucGFnZS5zY3NzIn0= */\"","import { Component, OnInit, ViewChild, Input, Output, EventEmitter } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { ProfissionalConteudoTexto } from 'src/app/services/profissionalConteudoTexto/profissionalConteudoTexto';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { LoadingController, NavController } from '@ionic/angular';\r\nimport { ProfissionalConteudoTextoService } from 'src/app/services/profissionalConteudoTexto/profissional-conteudo-texto.service';\r\nimport { OverlayService } from 'src/app/core/overlay.service';\r\nimport { AngularFireAuth } from 'angularfire2/auth';\r\n\r\n\r\n@Component({\r\n  selector: 'app-profissional-conteudo-texto',\r\n  templateUrl: './profissional-conteudo-texto.page.html',\r\n  styleUrls: ['./profissional-conteudo-texto.page.scss']\r\n})\r\nexport class ProfissionalConteudoTextoPage implements OnInit {\r\n  //Refernete ao ratebar\r\n  @Input() numStars: number = 5;\r\n  @Input() valor: number = 0;\r\n  @Output() ionClick: EventEmitter<number> = new EventEmitter<number>();\r\n\r\n  stars: string[] = [];\r\n  geral: number;\r\n\r\n  //Referente a parte de esconder botões da tela\r\n  public mostraMaisInfo: boolean;\r\n  public mostraFiltro: boolean;\r\n\r\n  changeFiltro() {\r\n    console.log(this.mostraMaisInfo);\r\n  }\r\n\r\n  changeMaisInfo() {\r\n    console.log(this.mostraFiltro);\r\n  }\r\n\r\n  @ViewChild('form', null) form: NgForm;\r\n\r\n  public idConteudoTexto: string;\r\n  public idUsuario: string;\r\n\r\n  public todas: ProfissionalConteudoTexto = {\r\n    idUsuario: '',\r\n    tituloTexto: '',\r\n    autorTexto: '',\r\n    texto: '',\r\n    maisInfoTexto: '',\r\n    idade: '',\r\n    avaliacao: null\r\n  };\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private loadingController: LoadingController,\r\n    private conteudoTextoService: ProfissionalConteudoTextoService,\r\n    private navCtrl: NavController,\r\n    private overlay: OverlayService,\r\n    private auth: AngularFireAuth\r\n  ) {}\r\n\r\n  //RatebarStar\r\n  calc() {\r\n    this.stars = [];\r\n    let tmp = this.valor;\r\n    for (let i = 0; i < this.numStars; i++, tmp--) {\r\n      if (tmp >= 1) this.stars.push('star');\r\n      else if (tmp > 0 && tmp < 1) this.stars.push('star-half');\r\n      else this.stars.push('star-outline');\r\n    }\r\n  }\r\n\r\n  starClicked(index) {\r\n    this.valor = index + 1;\r\n    this.ionClick.emit(this.valor);\r\n    this.calc();\r\n    this.geral = this.valor;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.calc();\r\n    this.idUsuario = this.auth.auth.currentUser.uid;\r\n    this.idConteudoTexto = this.route.snapshot.params['id']; //Pegando o id para uma futura edição\r\n\r\n    if (this.idConteudoTexto) {\r\n      this.loadTodo();\r\n    }\r\n  }\r\n\r\n  async loadTodo() {\r\n    const loading = await this.loadingController.create({\r\n      message: 'Carregando seus dados'\r\n    });\r\n    await loading.present();\r\n\r\n    this.conteudoTextoService.getTodo(this.idConteudoTexto).subscribe(res => {\r\n      loading.dismiss();\r\n      this.todas = res;\r\n    });\r\n  }\r\n\r\n  async saveTodo() {\r\n    const loading = await this.loadingController.create({\r\n      message: 'Salvando o texto cadastrado'\r\n    });\r\n    await loading.present();\r\n\r\n    //Testando se ja existe, se sim, faz update\r\n    if (this.idConteudoTexto) {\r\n      this.conteudoTextoService.updateTodo(this.todas, this.idConteudoTexto).then(() => {\r\n        loading.dismiss();\r\n        this.navCtrl.navigateBack('/menu/profissional-todos-conteudos');\r\n      });\r\n    } else {\r\n      // Se não existir, falva no banco\r\n      this.todas.avaliacao = this.geral;\r\n      this.todas.idUsuario = this.idUsuario;\r\n      this.conteudoTextoService.addTodo(this.todas).then(() => {\r\n        loading.dismiss();\r\n        this.navCtrl.navigateForward('/menu/profissional-todos-conteudos');\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { NavController, MenuController } from '@ionic/angular';\nimport { OnInit, Component, Input } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { OverlayService } from 'src/app/core/overlay.service';\n\n@Component({\n  selector: 'app-logout-button',\n  template: `\n    <ion-buttons>\n      <ion-button (click)=\"logout()\">\n        <ion-icon name=\"exit\" slot=\"icon-only\"></ion-icon>\n      </ion-button>\n    </ion-buttons>\n  `\n})\nexport class LogoutButtonComponent implements OnInit {\n  @Input() menuId: string; // Vai receber um valor do menu que será utilizado (AQUI MANDA OS OUTROS TIPO DE MENU DE ACORDO COM O USUÁRIO ??)\n\n  constructor(\n    private authService: AuthService,\n    private menuCtrl: MenuController,\n    private navCtrl: NavController,\n    private overlayService: OverlayService\n  ) {}\n\n  async ngOnInit(): Promise<void> {\n    if (!(await this.menuCtrl.isEnabled(this.menuId))) {\n      //Checka se o menu esta habilitado\n      this.menuCtrl.enable(true, this.menuId); // Se não estiver, indica o  id   do menu q qer habilitar\n    }\n  }\n\n  async logout(): Promise<void> {\n    await this.overlayService.alert({\n      //Apresenta a mensagem\n      message: 'Deseja mesmo sair ?',\n      buttons: [\n        {\n          text: 'Sim', //caso sim\n          handler: async () => {\n            await this.authService.signOut(); // chama o método de deslogar criado\n            /* AULA 95 ->\n            Se usário estiver deslogado, desabilita o login\n            #USAR PARA TIPOS DE USUÁRIO NO FUTURO ???\n            */\n            await this.menuCtrl.enable(false, this.menuId);\n            // this.navCtrl.navigateRoot('login'); // Finaliza as paginas e dieciona pro login\n          }\n        },\n        'Não' // Não faz nada e segue a execução\n      ]\n    });\n  }\n}\n","/* AULA 92 -> Componente genérico de menu, que pode ser chamado em qualquer momento na aplicação */\nimport { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-menu-toggle',\n  /* Usando HTML inline, não necessitdando de arquivos externos */\n  template: `\n    <ion-buttons>\n      <ion-menu-toggle [menu]=\"menu\">\n        <ion-button>\n          <ion-icon slot=\"icon-only\" name=\"menu\"></ion-icon>\n        </ion-button>\n      </ion-menu-toggle>\n    </ion-buttons>\n  `\n})\nexport class MenuToggleComponent {\n  @Input() menu: string;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { MenuToggleComponent } from './components/menu-toggle/menu-toggle.component';\nimport { LogoutButtonComponent } from './components/logout-button/logout-button.component';\n\n@NgModule({\n  declarations: [LogoutButtonComponent, MenuToggleComponent],\n  imports: [IonicModule],\n  exports: [\n    CommonModule,\n    ReactiveFormsModule,\n    IonicModule,\n    LogoutButtonComponent,\n    MenuToggleComponent,\n    FormsModule\n  ]\n})\nexport class SharedModule {}\n"],"sourceRoot":""}