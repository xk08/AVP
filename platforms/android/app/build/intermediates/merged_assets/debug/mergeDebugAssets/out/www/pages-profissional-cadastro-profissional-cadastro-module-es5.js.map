{"version":3,"sources":["./src/app/pages/profissional-cadastro/profissional-cadastro.page.html","./src/app/pages/profissional-cadastro/profissional-cadastro.module.ts","./src/app/pages/profissional-cadastro/profissional-cadastro.page.scss","./src/app/pages/profissional-cadastro/profissional-cadastro.page.ts"],"names":[],"mappings":";;;;;;;;;AAAA,46BAA46B,y3G;;;;;;;;;;;;;;;;;;;;ACAn4B;AACc;AACiB;AACZ;AAE5D,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,oFAAwB;KACpC;CACF,CAAC;AAMF;IAAA;IAA6C,CAAC;IAAjC,8BAA8B;QAJ1C,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,yEAAY,EAAE,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACtD,YAAY,EAAE,CAAC,oFAAwB,CAAC;SACzC,CAAC;OACW,8BAA8B,CAAG;IAAD,qCAAC;CAAA;AAAH;;;;;;;;;;;;AChB3C,+DAA+D,uL;;;;;;;;;;;;;;;;;;;;;;ACAF;AACrB;AACY;AAC+C;AACjC;AAQlE;IAKE,kCACU,MAAuB,EACvB,cAAsC,EACtC,iBAAoC,EAAE,yDAAyD;IAC/F,OAAsB;QAHtB,WAAM,GAAN,MAAM,CAAiB;QACvB,mBAAc,GAAd,cAAc,CAAwB;QACtC,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,YAAO,GAAP,OAAO,CAAe;QAqBhC,4BAA4B;QAC5B,aAAQ,GAAoB;YAC1B,IAAI,EAAE,EAAE;YACR,QAAQ,EAAE,EAAE;YACZ,IAAI,EAAE,EAAE;YACR,SAAS,EAAE,EAAE;YACb,eAAe,EAAE,EAAE;YACnB,OAAO,EAAE,IAAI;YACb,KAAK,EAAE,EAAE;YACT,KAAK,EAAE,EAAE;YACT,OAAO,EAAE,KAAK;YACd,cAAc,EAAE,IAAI;SACrB,CAAC;IAhCC,CAAC;IAEJ,2CAAQ,GAAR,cAAY,CAAC;IAEb,oCAAoC;IAC9B,kDAAe,GAArB;;;;;4BACkB,qBAAM,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC;4BAClD,qBAAqB;4BACrB,OAAO,EAAE,mBAAmB;yBAC7B,CAAC;;wBAHI,OAAO,GAAG,SAGd;wBAEF,uFAAuF;wBACvF,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC;4BACpE,OAAO,CAAC,OAAO,EAAE,CAAC;wBACpB,CAAC,CAAC,CAAC;wBAEH,oEAAoE;wBACpE,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;;;;;KACpC;;gBAtBiB,iEAAe;gBACP,gHAAsB;gBACnB,gEAAiB;gBAC3B,4DAAa;;IANP;QAAxB,+DAAS,CAAC,MAAM,EAAE,IAAI,CAAC;wEAAO,qDAAM;0DAAC;IAH3B,wBAAwB;QALpC,+DAAS,CAAC;YACT,QAAQ,EAAE,2BAA2B;YACrC,6LAAgD;;SAEjD,CAAC;+EAOkB,iEAAe;YACP,gHAAsB;YACnB,gEAAiB;YAC3B,4DAAa;OATrB,wBAAwB,CA2CpC;IAAD,+BAAC;CAAA;AA3CoC","file":"pages-profissional-cadastro-profissional-cadastro-module-es5.js","sourcesContent":["module.exports = \"<ion-header>\\r\\n  <ion-toolbar color=\\\"dark\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button defaultHref=\\\"login\\\"></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>Suas informações</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content padding>\\r\\n  <ion-grid>\\r\\n    <!-- alinha no centro e define pra coluna a resolucao de acordo com o tamanho da tela -->\\r\\n    <ion-row justify-content-center>\\r\\n      <!-- Deixa responsivo -->\\r\\n      <ion-col\\r\\n        size-sm=\\\"8\\\"\\r\\n        size-md=\\\"12\\\"\\r\\n        size-lg=\\\"3\\\"\\r\\n        size-xl=\\\"3\\\"\\r\\n      >\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n        <h1 style=text-align:center>\\r\\n          <img\\r\\n            src=\\\"../../../assets/img/avp.png\\\"\\r\\n            width=\\\"130px\\\"\\r\\n            height=\\\"100px\\\"\\r\\n          >\\r\\n        </h1>\\r\\n        <!-- continuar esssa pohha -->\\r\\n        <ion-item style=\\\"background-color: slategrey;\\\">\\r\\n          <ion-icon\\r\\n            name=\\\"md-camera\\\"\\r\\n            slot=\\\"start\\\"\\r\\n            color=\\\"dark\\\"\\r\\n          >\\r\\n          </ion-icon>\\r\\n          Enviar foto de perfil\\r\\n        </ion-item>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n        <form #form=\\\"ngForm\\\">\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n          <!-- NOME -->\\r\\n          <ion-item>\\r\\n            <ion-icon\\r\\n              color=\\\"dark\\\"\\r\\n              name=\\\"person\\\"\\r\\n              slot=\\\"start\\\"\\r\\n            ></ion-icon>\\r\\n            <ion-input\\r\\n              type=\\\"text\\\"\\r\\n              name=\\\"nome\\\"\\r\\n              placeholder=\\\"Nome\\\"\\r\\n              autofocus=\\\"true\\\"\\r\\n              [(ngModel)]='todoUser.nome'\\r\\n              required\\r\\n            ></ion-input>\\r\\n          </ion-item>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n          <!-- PROFISSÃO -->\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n          <ion-item>\\r\\n            <ion-icon\\r\\n              name=\\\"md-briefcase\\\"\\r\\n              color=\\\"dark\\\"\\r\\n              slot=\\\"start\\\"\\r\\n            ></ion-icon>\\r\\n            <ion-input\\r\\n              type=\\\"text\\\"\\r\\n              name=\\\"profissao\\\"\\r\\n              placeholder=\\\"Profissão exercida\\\"\\r\\n              autofocus=\\\"true\\\"\\r\\n              [(ngModel)]='todoUser.profissao'\\r\\n              required\\r\\n            ></ion-input>\\r\\n          </ion-item>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n          <!-- CODIGO PROFISSÃO -->\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n          <ion-item>\\r\\n            <ion-icon\\r\\n              name=\\\"md-checkbox\\\"\\r\\n              color=\\\"dark\\\"\\r\\n              slot=\\\"start\\\"\\r\\n            ></ion-icon>\\r\\n            <ion-input\\r\\n              type=\\\"text\\\"\\r\\n              name=\\\"codigoProfissao\\\"\\r\\n              placeholder=\\\"Código da profissão\\\"\\r\\n              autofocus=\\\"true\\\"\\r\\n              [(ngModel)]='todoUser.codigoProfissao'\\r\\n              required\\r\\n            ></ion-input>\\r\\n          </ion-item>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n          <!-- EMAIL -->\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n          <ion-item>\\r\\n            <ion-icon\\r\\n              name=\\\"mail\\\"\\r\\n              color=\\\"dark\\\"\\r\\n              slot=\\\"start\\\"\\r\\n            ></ion-icon>\\r\\n            <ion-input\\r\\n              type=\\\"email\\\"\\r\\n              name=\\\"email\\\"\\r\\n              placeholder=\\\"E-mail\\\"\\r\\n              inputmode=\\\"email\\\"\\r\\n              autofocus=\\\"true\\\"\\r\\n              [(ngModel)]='todoUser.email'\\r\\n              required\\r\\n            ></ion-input>\\r\\n          </ion-item>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n          <!-- SENHA -->\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n          <ion-item>\\r\\n            <ion-icon\\r\\n              name=\\\"lock\\\"\\r\\n              color=\\\"dark\\\"\\r\\n              slot=\\\"start\\\"\\r\\n            ></ion-icon>\\r\\n            <ion-input\\r\\n              type=\\\"password\\\"\\r\\n              name=\\\"password\\\"\\r\\n              placeholder=\\\"Senha\\\"\\r\\n              [(ngModel)]='todoUser.senha'\\r\\n              required\\r\\n            ></ion-input>\\r\\n          </ion-item>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n          <!-- BOTÃO DE CADASTRO -->\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n          <ion-button\\r\\n            expand=\\\"block\\\"\\r\\n            type=\\\"submit\\\"\\r\\n            class=\\\"login-button\\\"\\r\\n            (click)=\\\"concluiCadastro()\\\"\\r\\n            color=\\\"dark\\\"\\r\\n          >\\r\\n            Colaborar\\r\\n          </ion-button>\\r\\n        </form>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-grid>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n</ion-content>\\r\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ProfissionalCadastroPage } from './profissional-cadastro.page';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProfissionalCadastroPage\n  }\n];\n\n@NgModule({\n  imports: [SharedModule, RouterModule.forChild(routes)],\n  declarations: [ProfissionalCadastroPage]\n})\nexport class ProfissionalCadastroPageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3Byb2Zpc3Npb25hbC1jYWRhc3Ryby9wcm9maXNzaW9uYWwtY2FkYXN0cm8ucGFnZS5zY3NzIn0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport { UsuarioCadastroService } from 'src/app/services/usuarioCadastro/usuario-cadastro.service';\nimport { LoadingController, NavController } from '@ionic/angular';\nimport { UsuarioCadastro } from 'src/app/services/usuarioCadastro/usuarioCadastro';\n\n@Component({\n  selector: 'app-profissional-cadastro',\n  templateUrl: './profissional-cadastro.page.html',\n  styleUrls: ['./profissional-cadastro.page.scss']\n})\nexport class ProfissionalCadastroPage implements OnInit {\n  public uidUser: any;\n\n  @ViewChild('form', null) form: NgForm;\n\n  constructor(\n    private afAuth: AngularFireAuth,\n    private usuarioService: UsuarioCadastroService,\n    private loadingController: LoadingController, // Substituir depois pelo overlayService (que é genérico)\n    private navCtrl: NavController\n  ) {}\n\n  ngOnInit() {}\n\n  //FUNÇÃO PARA CADASTRAR NOVO USUARIO\n  async concluiCadastro() {\n    const loading = await this.loadingController.create({\n      //Trocar pelo overlay\n      message: 'Salvando dados...'\n    });\n\n    //PASSA OS DADOS PARA CADASTRAR O USUARIO E SEU ENDEREÇO ENQUANTO ISSO EXIBE UM LOADING\n    this.uidUser = this.usuarioService.addUsuarioTodo(this.todoUser).then(() => {\n      loading.dismiss();\n    });\n\n    //APÓS DADOS CADASTRADOS, ENVIA O USUARIO PARA O INICIO DA APLICAÇÃO\n    this.navCtrl.navigateBack('login');\n  }\n\n  //REFERÊNCIA A CLASS USUARIO\n  todoUser: UsuarioCadastro = {\n    nome: '',\n    dataNasc: '',\n    foto: '',\n    profissao: '',\n    codigoProfissao: '',\n    isAtivo: true,\n    email: '',\n    senha: '',\n    isAdmin: false,\n    isProfissional: true\n  };\n}\n"],"sourceRoot":""}