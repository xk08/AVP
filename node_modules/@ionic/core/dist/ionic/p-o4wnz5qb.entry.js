import{r as t,c as i,d as s,h as e,e as n,H as o}from"./p-5eafefdf.js";import{b as r}from"./p-6ccf652f.js";import{d as a,b as h,c}from"./p-94c4865f.js";import{b as d}from"./p-c90aaa66.js";import{a as u}from"./p-00265c49.js";import{l,t as v,s as p}from"./p-2d3f0361.js";import{g as m,P as f}from"./p-90d0df24.js";const w=1,g=2,b=3;class k{constructor(t,i){this.component=t,this.params=i,this.state=w}async init(t){if(this.state=g,!this.element){const i=this.component;this.element=await u(this.delegate,t,i,["ion-page","ion-page-invisible"],this.params)}}_destroy(){d(this.state!==b,"view state must be ATTACHED");const t=this.element;t&&(this.delegate?this.delegate.removeViewFromDom(t.parentElement,t):t.remove()),this.nav=void 0,this.state=b}}const y=(t,i,s)=>{if(!t)return!1;if(t.component!==i)return!1;const e=t.params;if(e===s)return!0;if(!e&&!s)return!0;if(!e||!s)return!1;const n=Object.keys(e),o=Object.keys(s);if(n.length!==o.length)return!1;for(const t of n)if(e[t]!==s[t])return!1;return!0},C=(t,i)=>t?t instanceof k?t:new k(t,i):null,E=class{constructor(s){t(this,s),this.transInstr=[],this.animationEnabled=!0,this.useRouter=!1,this.isTransitioning=!1,this.destroyed=!1,this.views=[],this.animated=!0,this.ionNavWillLoad=i(this,"ionNavWillLoad",7),this.ionNavWillChange=i(this,"ionNavWillChange",3),this.ionNavDidChange=i(this,"ionNavDidChange",3)}swipeGestureChanged(){this.gesture&&this.gesture.setDisabled(!0!==this.swipeGesture)}rootChanged(){void 0!==this.root&&(this.useRouter||this.setRoot(this.root,this.rootParams))}componentWillLoad(){if(this.useRouter=!!document.querySelector("ion-router")&&!this.el.closest("[no-router]"),void 0===this.swipeGesture){const t=s(this);this.swipeGesture=r.getBoolean("swipeBackEnabled","ios"===t)}this.ionNavWillLoad.emit()}async componentDidLoad(){this.rootChanged(),this.gesture=(await __sc_import_ionic("./p-dc1b83c2.js")).createSwipeBackGesture(this.el,this.canStart.bind(this),this.onStart.bind(this),this.onMove.bind(this),this.onEnd.bind(this)),this.swipeGestureChanged()}componentDidUnload(){for(const t of this.views)l(t.element,a),t._destroy();this.gesture&&(this.gesture.destroy(),this.gesture=void 0),this.transInstr.length=this.views.length=0,this.destroyed=!0}push(t,i,s,e){return this.queueTrns({insertStart:-1,insertViews:[{page:t,params:i}],opts:s},e)}insert(t,i,s,e,n){return this.queueTrns({insertStart:t,insertViews:[{page:i,params:s}],opts:e},n)}insertPages(t,i,s,e){return this.queueTrns({insertStart:t,insertViews:i,opts:s},e)}pop(t,i){return this.queueTrns({removeStart:-1,removeCount:1,opts:t},i)}popTo(t,i,s){const e={removeStart:-1,removeCount:-1,opts:i};return"object"==typeof t&&t.component?(e.removeView=t,e.removeStart=1):"number"==typeof t&&(e.removeStart=t+1),this.queueTrns(e,s)}popToRoot(t,i){return this.queueTrns({removeStart:1,removeCount:-1,opts:t},i)}removeIndex(t,i=1,s,e){return this.queueTrns({removeStart:t,removeCount:i,opts:s},e)}setRoot(t,i,s,e){return this.setPages([{page:t,params:i}],s,e)}setPages(t,i,s){return null==i&&(i={}),!0!==i.animated&&(i.animated=!1),this.queueTrns({insertStart:0,insertViews:t,removeStart:0,removeCount:-1,opts:i},s)}setRouteId(t,i,s){const e=this.getActiveSync();if(y(e,t,i))return Promise.resolve({changed:!1,element:e.element});let n;const o=new Promise(t=>n=t);let r;const a={updateURL:!1,viewIsReady:t=>{let i;const s=new Promise(t=>i=t);return n({changed:!0,element:t,markVisible:async()=>{i(),await r}}),s}};if("root"===s)r=this.setRoot(t,i,a);else{const e=this.views.find(s=>y(s,t,i));e?r=this.popTo(e,Object.assign({},a,{direction:"back"})):"forward"===s?r=this.push(t,i,a):"back"===s&&(r=this.setRoot(t,i,Object.assign({},a,{direction:"back",animated:!0})))}return o}async getRouteId(){const t=this.getActiveSync();return t?{id:t.element.tagName,params:t.params,element:t.element}:void 0}getActive(){return Promise.resolve(this.getActiveSync())}getByIndex(t){return Promise.resolve(this.views[t])}canGoBack(t){return Promise.resolve(this.canGoBackSync(t))}getPrevious(t){return Promise.resolve(this.getPreviousSync(t))}getLength(){return this.views.length}getActiveSync(){return this.views[this.views.length-1]}canGoBackSync(t=this.getActiveSync()){return!(!t||!this.getPreviousSync(t))}getPreviousSync(t=this.getActiveSync()){if(!t)return;const i=this.views,s=i.indexOf(t);return s>0?i[s-1]:void 0}queueTrns(t,i){if(this.isTransitioning&&null!=t.opts&&t.opts.skipIfBusy)return Promise.resolve(!1);const s=new Promise((i,s)=>{t.resolve=i,t.reject=s});return t.done=i,t.insertViews&&0===t.insertViews.length&&(t.insertViews=void 0),this.transInstr.push(t),this.nextTrns(),s}success(t,i){if(this.destroyed)this.fireError("nav controller was destroyed",i);else if(i.done&&i.done(t.hasCompleted,t.requiresTransition,t.enteringView,t.leavingView,t.direction),i.resolve(t.hasCompleted),!1!==i.opts.updateURL&&this.useRouter){const i=document.querySelector("ion-router");i&&i.navChanged("back"===t.direction?"back":"forward")}}failed(t,i){this.destroyed?this.fireError("nav controller was destroyed",i):(this.transInstr.length=0,this.fireError(t,i))}fireError(t,i){i.done&&i.done(!1,!1,t),i.reject&&!this.destroyed?i.reject(t):i.resolve(!1)}nextTrns(){if(this.isTransitioning)return!1;const t=this.transInstr.shift();return!!t&&(this.runTransition(t),!0)}async runTransition(t){try{this.ionNavWillChange.emit(),this.isTransitioning=!0,this.prepareTI(t);const i=this.getActiveSync(),s=this.getEnteringView(t,i);if(!i&&!s)throw new Error("no views in the stack to be removed");s&&s.state===w&&await s.init(this.el),this.postViewInit(s,i,t);const e=(t.enteringRequiresTransition||t.leavingRequiresTransition)&&s!==i?await this.transition(s,i,t):{hasCompleted:!0,requiresTransition:!1};this.success(e,t),this.ionNavDidChange.emit()}catch(i){this.failed(i,t)}this.isTransitioning=!1,this.nextTrns()}prepareTI(t){const i=this.views.length;if(t.opts=t.opts||{},void 0===t.opts.delegate&&(t.opts.delegate=this.delegate),void 0!==t.removeView){d(void 0!==t.removeStart,"removeView needs removeStart"),d(void 0!==t.removeCount,"removeView needs removeCount");const i=this.views.indexOf(t.removeView);if(i<0)throw new Error("removeView was not found");t.removeStart+=i}void 0!==t.removeStart&&(t.removeStart<0&&(t.removeStart=i-1),t.removeCount<0&&(t.removeCount=i-t.removeStart),t.leavingRequiresTransition=t.removeCount>0&&t.removeStart+t.removeCount===i),t.insertViews&&((t.insertStart<0||t.insertStart>i)&&(t.insertStart=i),t.enteringRequiresTransition=t.insertStart===i);const s=t.insertViews;if(!s)return;d(s.length>0,"length can not be zero");const e=(t=>t.map(t=>t instanceof k?t:"page"in t?C(t.page,t.params):C(t,void 0)).filter(t=>null!==t))(s);if(0===e.length)throw new Error("invalid views to insert");for(const i of e){i.delegate=t.opts.delegate;const s=i.nav;if(s&&s!==this)throw new Error("inserted view was already inserted");if(i.state===b)throw new Error("inserted view was already destroyed")}t.insertViews=e}getEnteringView(t,i){const s=t.insertViews;if(void 0!==s)return s[s.length-1];const e=t.removeStart;if(void 0!==e){const s=this.views,n=e+t.removeCount;for(let t=s.length-1;t>=0;t--){const o=s[t];if((t<e||t>=n)&&o!==i)return o}}}postViewInit(t,i,s){d(i||t,"Both leavingView and enteringView are null"),d(s.resolve,"resolve must be valid"),d(s.reject,"reject must be valid");const e=s.opts,n=s.insertViews,o=s.removeStart,r=s.removeCount;let u;if(void 0!==o&&void 0!==r){d(o>=0,"removeStart can not be negative"),d(r>=0,"removeCount can not be negative"),u=[];for(let s=0;s<r;s++){const e=this.views[s+o];e&&e!==t&&e!==i&&u.push(e)}e.direction=e.direction||"back"}const v=this.views.length+(void 0!==n?n.length:0)-(void 0!==r?r:0);if(d(v>=0,"final balance can not be negative"),0===v)throw console.warn("You can't remove all the pages in the navigation stack. nav.pop() is probably called too many times.",this,this.el),new Error("navigation stack needs at least one root page");if(n){let t=s.insertStart;for(const i of n)this.insertViewAt(i,t),t++;s.enteringRequiresTransition&&(e.direction=e.direction||"forward")}if(u&&u.length>0){for(const t of u)l(t.element,h),l(t.element,c),l(t.element,a);for(const t of u)this.destroyView(t)}}async transition(t,i,e){const n=e.opts,o=n.progressAnimation?t=>this.sbAni=t:void 0,a=s(this),h=t.element,c=i&&i.element,d=Object.assign({mode:a,showGoBack:this.canGoBackSync(t),baseEl:this.el,animationBuilder:this.animation||n.animationBuilder||r.get("navAnimation"),progressCallback:o,animated:this.animated&&r.getBoolean("animated",!0),enteringEl:h,leavingEl:c},n),{hasCompleted:u}=await v(d);return this.transitionFinish(u,t,i,n)}transitionFinish(t,i,s,e){const n=t?i:s;return n&&this.cleanup(n),{hasCompleted:t,requiresTransition:!0,enteringView:i,leavingView:s,direction:e.direction}}insertViewAt(t,i){const s=this.views,e=s.indexOf(t);e>-1?(d(t.nav===this,"view is not part of the nav"),s.splice(i,0,s.splice(e,1)[0])):(d(!t.nav,"nav is used"),t.nav=this,s.splice(i,0,t))}removeView(t){d(t.state===g||t.state===b,"view state should be loaded or destroyed");const i=this.views,s=i.indexOf(t);d(s>-1,"view must be part of the stack"),s>=0&&i.splice(s,1)}destroyView(t){t._destroy(),this.removeView(t)}cleanup(t){if(this.destroyed)return;const i=this.views,s=i.indexOf(t);for(let t=i.length-1;t>=0;t--){const e=i[t],n=e.element;t>s?(l(n,a),this.destroyView(e)):t<s&&p(n,!0)}}canStart(){return!!this.swipeGesture&&!this.isTransitioning&&0===this.transInstr.length&&this.animationEnabled&&this.canGoBackSync()}onStart(){this.queueTrns({removeStart:-1,removeCount:1,opts:{direction:"back",progressAnimation:!0}},void 0)}onMove(t){this.sbAni&&this.sbAni.progressStep(t)}onEnd(t,i,s){if(this.sbAni){this.animationEnabled=!1,this.sbAni.onFinish(()=>{this.animationEnabled=!0},{oneTimeCallback:!0});let e=t?-.001:.001;t?e+=m(new f(0,0),new f(.32,.72),new f(0,1),new f(1,1),i):(this.sbAni.easing("cubic-bezier(1, 0, 0.68, 0.28)"),e+=m(new f(0,0),new f(1,0),new f(.68,.28),new f(1,1),i)),this.sbAni.progressEnd(t,e,s)}}render(){return e("slot",null)}get el(){return n(this)}static get watchers(){return{swipeGesture:["swipeGestureChanged"],root:["rootChanged"]}}static get style(){return":host{left:0;right:0;top:0;bottom:0;position:absolute;contain:layout size style;overflow:hidden;z-index:0}"}},P=(t,i,s,e)=>{const n=t.closest("ion-nav");if(n)if("forward"===i){if(void 0!==s)return n.push(s,e,{skipIfBusy:!0})}else if("root"===i){if(void 0!==s)return n.setRoot(s,e,{skipIfBusy:!0})}else if("back"===i)return n.pop({skipIfBusy:!0});return Promise.resolve(!1)},S=class{constructor(i){t(this,i),this.routerDirection="forward",this.onClick=()=>P(this.el,this.routerDirection,this.component,this.componentProps)}render(){return e(o,{onClick:this.onClick})}get el(){return n(this)}},T=class{constructor(i){t(this,i),this.pop=()=>P(this.el,"back")}componentDidLoad(){console.warn('[DEPRECATED][ion-nav-pop] <ion-nav-pop> is deprecated. Use `<ion-nav-link routerDirection="back">` instead.')}render(){return e(o,{onClick:this.pop})}get el(){return n(this)}},V=class{constructor(i){t(this,i),this.push=()=>P(this.el,"forward",this.component,this.componentProps)}componentDidLoad(){console.warn('[DEPRECATED][ion-nav-push] `<ion-nav-push component="MyComponent">` is deprecated. Use `<ion-nav-link component="MyComponent">` instead.')}render(){return e(o,{onClick:this.push})}get el(){return n(this)}},_=class{constructor(i){t(this,i),this.setRoot=()=>P(this.el,"root",this.component,this.componentProps)}componentDidLoad(){console.warn('[DEPRECATED][ion-nav-set-root] `<ion-nav-set-root component="MyComponent">` is deprecated. Use `<ion-nav-link component="MyComponent" routerDirection="root">` instead.')}render(){return e(o,{onClick:this.setRoot})}get el(){return n(this)}};export{E as ion_nav,S as ion_nav_link,T as ion_nav_pop,V as ion_nav_push,_ as ion_nav_set_root};