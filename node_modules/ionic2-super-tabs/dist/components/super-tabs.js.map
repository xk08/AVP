{"version":3,"sources":["../../src/components/super-tabs.ts"],"names":[],"mappings":"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","file":"super-tabs.js","sourceRoot":"","sourcesContent":["import {\n  AfterContentInit,\n  AfterViewInit,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  Renderer2,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport { SuperTab } from './super-tab';\nimport {\n  App,\n  DeepLinker,\n  DomController,\n  NavController,\n  NavControllerBase,\n  Platform,\n  RootNode,\n  ViewController\n} from 'ionic-angular';\nimport { NavigationContainer } from 'ionic-angular/navigation/navigation-container';\nimport { Observable } from 'rxjs/Observable';\nimport { Subscription } from 'rxjs/Subscription';\nimport { SuperTabsToolbar } from './super-tabs-toolbar';\nimport { SuperTabsContainer } from './super-tabs-container';\nimport { SuperTabsController } from '../providers/super-tabs-controller';\nimport { DIRECTION_SWITCH } from 'ionic-angular/navigation/nav-util';\nimport 'rxjs/add/observable/fromEvent';\nimport 'rxjs/add/observable/merge';\nimport 'rxjs/add/operator/debounceTime';\n\nexport interface SuperTabsConfig {\n  /**\n   * Defaults to 40\n   */\n  maxDragAngle?: number;\n  /**\n   * Defaults to 20\n   */\n  dragThreshold?: number;\n  /**\n   * Allows elements inside tabs to be dragged, defaults to false\n   */\n  allowElementScroll?: boolean;\n  /**\n   * Defaults to ease-in-out\n   */\n  transitionEase?: string;\n  /**\n   * Defaults to 150\n   */\n  transitionDuration?: number;\n  /**\n   * Defaults to none\n   */\n  sideMenu?: 'left' | 'right' | 'both',\n  /**\n   * Defaults to 50\n   */\n  sideMenuThreshold?: number;\n\n  /**\n   * Defaults to 300\n   */\n  shortSwipeDuration?: number;\n}\n\n\nexport class SuperTabs implements OnInit, AfterContentInit, AfterViewInit, OnDestroy, RootNode, NavigationContainer {\n  /**\n   * Color of the toolbar behind the tab buttons\n   */\n  \n  toolbarBackground: string;\n\n  /**\n   * Color of the tab buttons' text and/or icon\n   */\n  \n  toolbarColor: string;\n\n  /**\n   * Color of the slider that moves based on what tab is selected\n   */\n  \n  indicatorColor: string = 'primary';\n\n  /**\n   * Badge color\n   */\n  \n  badgeColor: string = 'primary';\n\n  /**\n   * Configuration\n   */\n  \n  config: SuperTabsConfig = {};\n\n  /**\n   * Tabs instance ID\n   */\n  \n  id: string;\n\n  \n  name: string;\n\n  /**\n   * Height of the tabs\n   */\n  \n  set height(val: number) {\n    this.rnd.setStyle(this.el.nativeElement, 'height', val + 'px');\n  }\n\n  get height(): number {\n    return this.el.nativeElement.offsetHeight;\n  }\n\n  /**\n   * The initial selected tab index\n   * @param val {number} tab index\n   */\n  \n  set selectedTabIndex(val: number) {\n    this._selectedTabIndex = Number(val);\n    this.init && this.alignIndicatorPosition(true);\n  }\n\n  get selectedTabIndex(): number {\n    return this._selectedTabIndex;\n  }\n\n  /**\n   * Set to true to enable tab buttons scrolling\n   * @param val\n   */\n  \n  set scrollTabs(val: boolean) {\n    this._scrollTabs = typeof val !== 'boolean' || val === true;\n  }\n\n  get scrollTabs() {\n    return this._scrollTabs;\n  }\n\n  /**\n   * Tab buttons placement. Can be `top` or `bottom`.\n   * @type {string}\n   */\n  \n  tabsPlacement: string = 'top';\n\n  /**\n   * Emits the tab index when the selected tab changes\n   * @type {EventEmitter<Object>}\n   */\n  \n  tabSelect: EventEmitter<any> = new EventEmitter<any>();\n\n  /**\n   * Indicates whether the toolbar is visible\n   * @private\n   */\n  _isToolbarVisible: boolean = true;\n\n  /**\n   * @private\n   */\n  _tabs: SuperTab[] = [];\n\n  \n  private toolbar: SuperTabsToolbar;\n\n  \n  private tabsContainer: SuperTabsContainer;\n\n  private maxIndicatorPosition: number;\n\n  /**\n   * Indicates whether the tab buttons should scroll\n   * @type {boolean}\n   * @private\n   */\n  private _scrollTabs: boolean = false;\n\n  /**\n   * Selected tab index\n   * @type {number}\n   * @private\n   */\n  private _selectedTabIndex: number = 0;\n\n  /**\n   * Any observable subscriptions that we should unsubscribe from when destroying this component\n   * @type {Array<Subscription>}\n   * @private\n   */\n  private watches: Subscription[] = [];\n\n  /**\n   * Indicates whether any of the tabs has an icon\n   * @type {boolean}\n   * @private\n   */\n  private hasIcons: boolean = false;\n\n  /**\n   * Indicates whether any of the tabs has a title\n   * @type {boolean}\n   * @private\n   */\n  private hasTitles: boolean = false;\n\n  /**\n   * Indicates whether the component has finished initializing\n   * @type {boolean}\n   * @private\n   */\n  private init: boolean = false;\n\n  /**\n   * Parent NavController\n   * @type {NavControllerBase}\n   */\n  parent: NavControllerBase;\n\n  constructor( parent: NavController,\n               public viewCtrl: ViewController,\n              private _app: App,\n              private el: ElementRef,\n              private rnd: Renderer2,\n              private superTabsCtrl: SuperTabsController,\n              private linker: DeepLinker,\n              private domCtrl: DomController,\n              private _plt: Platform) {\n    this.parent = <NavControllerBase>parent;\n\n    if (this.parent) {\n      this.parent.registerChildNav(this);\n\n    } else if (viewCtrl && viewCtrl.getNav()) {\n      this.parent = <any>viewCtrl.getNav();\n      this.parent.registerChildNav(this);\n\n    } else if (this._app) {\n      this._app.registerRootNav(this);\n    }\n\n    const obsToMerge: Observable<any>[] = [\n      Observable.fromEvent(window, 'orientationchange'),\n      Observable.fromEvent(window, 'resize')\n    ];\n\n    if (viewCtrl) {\n      obsToMerge.push(viewCtrl.didEnter);\n    }\n\n    // re-adjust the height of the slider when the orientation changes\n    const $windowResize = Observable.merge.apply(this, obsToMerge).debounceTime(100);\n\n    const windowResizeSub = $windowResize.subscribe(() => {\n      this.resize();\n    });\n\n    this.watches.push(windowResizeSub);\n  }\n\n  ngOnInit() {\n    const defaultConfig: SuperTabsConfig = {\n      dragThreshold: 10,\n      allowElementScroll: false,\n      maxDragAngle: 40,\n      sideMenuThreshold: 50,\n      transitionDuration: 300,\n      transitionEase: 'cubic-bezier(0.35, 0, 0.25, 1)',\n      shortSwipeDuration: 300\n    };\n\n    for (let prop in this.config) {\n      defaultConfig[prop] = this.config[prop];\n    }\n\n    this.config = defaultConfig;\n\n    if (this.config.allowElementScroll === true) {\n      if (this.config.dragThreshold < 110) {\n        this.config.dragThreshold = 110;\n      }\n    }\n\n    this.id = this.id || `super-tabs-${++superTabsIds}`;\n    this.superTabsCtrl.registerInstance(this);\n\n    if (this.tabsPlacement === 'bottom') {\n      this.rnd.addClass(this.getElementRef().nativeElement, 'tabs-placement-bottom');\n    }\n  }\n\n  ngAfterContentInit() {\n    this.updateTabWidth();\n    this.toolbar.tabs = this._tabs;\n  }\n\n  async ngAfterViewInit() {\n    const tabsSegment = this.linker.getSegmentByNavIdOrName(this.id, this.name);\n\n    if (tabsSegment) {\n      this.selectedTabIndex = this.getTabIndexById(tabsSegment.id);\n    }\n\n    this.linker.navChange(DIRECTION_SWITCH);\n\n    if (!this.hasTitles && !this.hasIcons) this._isToolbarVisible = false;\n\n    this.tabsContainer.slideTo(this.selectedTabIndex, false);\n    await this.refreshTabStates();\n    this.fireLifecycleEvent(['willEnter', 'didEnter']);\n\n    this.setFixedIndicatorWidth();\n\n    // we need this to make sure the \"slide\" thingy doesn't move outside the screen\n    this.setMaxIndicatorPosition();\n\n    setTimeout(() => this.alignIndicatorPosition(), 100);\n\n    this.refreshContainerHeight();\n\n    this.init = true;\n  }\n\n  ngOnDestroy() {\n    this.watches.forEach((watch: Subscription) => {\n      watch.unsubscribe && watch.unsubscribe();\n    });\n\n    this.parent.unregisterChildNav(this);\n\n    this.superTabsCtrl.unregisterInstance(this.id);\n  }\n\n  getType(): string {\n    return;\n  }\n\n  getSecondaryIdentifier(): string {\n    return;\n  }\n\n  getAllChildNavs(): any[] {\n    return this._tabs;\n  }\n\n  resize() {\n    if (this.el.nativeElement.offsetParent === null) return;\n    this.setMaxIndicatorPosition();\n    this.updateTabWidth();\n    this.setFixedIndicatorWidth();\n    this.refreshTabWidths();\n    this.tabsContainer.refreshDimensions();\n    this.tabsContainer.slideTo(this.selectedTabIndex);\n    this.alignIndicatorPosition();\n    this.refreshContainerHeight();\n  }\n\n  /**\n   * Sets the badge number for a specific tab\n   * @param tabId {string} tab ID\n   * @param value {number} badge number\n   */\n  setBadge(tabId: string, value: number) {\n    this.getTabById(tabId).setBadge(value);\n  }\n\n  /**\n   * Clears the badge for a specific tab\n   * @param tabId {string} tab ID\n   */\n  clearBadge(tabId: string) {\n    this.getTabById(tabId).clearBadge();\n  }\n\n  /**\n   * Increases the badge value for a specific tab\n   * @param tabId {string} tab ID\n   * @param increaseBy {number} the number to increase by\n   */\n  increaseBadge(tabId: string, increaseBy: number) {\n    this.getTabById(tabId).increaseBadge(increaseBy);\n  }\n\n  decreaseBadge(tabId: string, decreaseBy: number) {\n    this.getTabById(tabId).decreaseBadge(decreaseBy);\n  }\n\n  enableTabsSwipe(enable: boolean) {\n    this.tabsContainer.enableTabsSwipe(enable);\n  }\n\n  enableTabSwipe(tabId: string, enable: boolean) {\n    this.tabsContainer.enableTabSwipe(this.getTabIndexById(tabId), enable);\n  }\n\n  showToolbar(show: boolean) {\n    this._isToolbarVisible = show;\n    this.refreshContainerHeight();\n  }\n\n  slideTo(indexOrId: string | number, fireEvent: boolean = true) {\n    typeof indexOrId === 'string' && (indexOrId = this.getTabIndexById(indexOrId));\n    fireEvent && this.onToolbarTabSelect(indexOrId);\n  }\n\n  getActiveChildNavs(): NavigationContainer[] {\n    if (this.selectedTabIndex < 0) {\n      this.selectedTabIndex = 0;\n    }\n    \n    return [this._tabs[this.selectedTabIndex]];\n  }\n\n  addTab(tab: SuperTab) {\n    tab.rootNavCtrl = this.parent;\n    tab.rootParams = tab.rootParams || {};\n\n    tab.tabId = tab.tabId || `super-tabs-${this.id}-tab-${this._tabs.length}`;\n\n    this._tabs.push(tab);\n\n    if (tab.icon) {\n      this.hasIcons = true;\n    }\n\n    if (tab.title) {\n      this.hasTitles = true;\n    }\n\n    tab.setWidth(this.el.nativeElement.offsetWidth);\n  }\n\n  /**\n   * We listen to drag events to move the \"slide\" thingy along with the slides\n   */\n  onDrag() {\n    if (!this._isToolbarVisible) return;\n\n    this.domCtrl.write(() => {\n      const singleSlideWidth = this.tabsContainer.tabWidth,\n        slidesWidth = this.tabsContainer.containerWidth;\n\n      let percentage = Math.abs(this.tabsContainer.containerPosition / slidesWidth);\n\n      if (this.scrollTabs) {\n        const originalSlideStart = singleSlideWidth * this.selectedTabIndex,\n          originalPosition = this.getRelativeIndicatorPosition(),\n          originalWidth = this.getSegmentButtonWidth();\n\n        let nextPosition: number, nextWidth: number, indicatorPosition: number, indicatorWidth: number;\n\n        const deltaTabPos = originalSlideStart - Math.abs(this.tabsContainer.containerPosition);\n\n        percentage = Math.abs(deltaTabPos / singleSlideWidth);\n\n        if (deltaTabPos < 0) {\n          // going to next slide\n          nextPosition = this.getRelativeIndicatorPosition(this.selectedTabIndex + 1);\n          nextWidth = this.getSegmentButtonWidth(this.selectedTabIndex + 1);\n          indicatorPosition = originalPosition + percentage * (nextPosition - originalPosition);\n        } else {\n          // going to previous slide\n          nextPosition = this.getRelativeIndicatorPosition(this.selectedTabIndex - 1);\n          nextWidth = this.getSegmentButtonWidth(this.selectedTabIndex - 1);\n          indicatorPosition = originalPosition - percentage * (originalPosition - nextPosition);\n        }\n\n        const deltaWidth: number = nextWidth - originalWidth;\n        indicatorWidth = originalWidth + percentage * deltaWidth;\n\n        if ((originalWidth > nextWidth && indicatorWidth < nextWidth) || (originalWidth < nextWidth && indicatorWidth > nextWidth)) {\n          // this is only useful on desktop, because you are able to drag and swipe through multiple tabs at once\n          // which results in the indicator width to be super small/big since it's changing based on the current/next widths\n          indicatorWidth = nextWidth;\n        }\n\n        this.alignTabButtonsContainer();\n        this.toolbar.setIndicatorProperties(indicatorWidth, indicatorPosition);\n      } else {\n        this.toolbar.setIndicatorPosition(Math.min(percentage * singleSlideWidth, this.maxIndicatorPosition));\n      }\n    });\n  }\n\n  /**\n   * Runs when the user clicks on a segment button\n   * @param index\n   */\n  async onTabChange(index: number) {\n    index = Number(index);\n    if (index === this.selectedTabIndex) {\n      this.tabSelect.emit({\n        index,\n        id: this._tabs[index].tabId,\n        changed: false\n      });\n      return;\n    }\n\n\n    if (index <= this._tabs.length) {\n\n      this.fireLifecycleEvent(['willLeave', 'didLeave']);\n\n      this.selectedTabIndex = index;\n\n      this.linker.navChange(DIRECTION_SWITCH);\n\n      await this.refreshTabStates();\n\n      this.fireLifecycleEvent(['willEnter', 'didEnter']);\n\n      this.tabSelect.emit({\n        index,\n        id: this._tabs[index].tabId,\n        changed: true\n      });\n    }\n  }\n\n  onToolbarTabSelect(index: number) {\n    if (index !== this.selectedTabIndex) {\n      this.tabsContainer.slideTo(index);\n    }\n    return this.onTabChange(index);\n  }\n\n  async onContainerTabSelect(ev: { index: number; changed: boolean }) {\n    if (ev.changed) {\n      await this.onTabChange(ev.index);\n    }\n    this.alignIndicatorPosition(true);\n  }\n\n  private fireLifecycleEvent(events: string[]) {\n    const activeView = this.getActiveTab().getActive();\n    events.forEach((event: string) => {\n      switch (event) {\n        case 'willEnter':\n          activeView._willEnter();\n          break;\n        case 'didEnter':\n          activeView._didEnter();\n          break;\n        case 'willLeave':\n          activeView._willLeave(false);\n          break;\n        case 'didLeave':\n          activeView._didLeave();\n          break;\n      }\n    });\n  }\n\n  private refreshTabStates() {\n    return Promise.all(this._tabs.map((tab, i) => {\n      tab.setActive(i === this.selectedTabIndex);\n\n      return tab.load(Math.abs(this.selectedTabIndex - i) < 2);\n    }));\n  }\n\n  private updateTabWidth() {\n    this.tabsContainer.tabWidth = this.el.nativeElement.offsetWidth;\n  }\n\n  private refreshContainerHeight() {\n    let heightOffset: number = 0;\n\n    if (this._isToolbarVisible) {\n      if (this.hasTitles && this.hasIcons) {\n        heightOffset = 72;\n      } else if (this.hasTitles || this.hasIcons) {\n        heightOffset = 48;\n      }\n    }\n\n    this.rnd.setStyle(this.tabsContainer.getNativeElement(), 'height', `calc(100% - ${heightOffset}px)`);\n  }\n\n  private refreshTabWidths() {\n    const width: number = this.el.nativeElement.offsetWidth;\n    this._tabs.forEach((tab: SuperTab) => tab.setWidth(width));\n  }\n\n  private alignTabButtonsContainer(animate?: boolean) {\n    const\n      mw: number = this.el.nativeElement.offsetWidth, // max width\n      iw: number = this.toolbar.indicatorWidth, // indicator width\n      ip: number = this.toolbar.indicatorPosition, // indicatorPosition\n      sp: number = this.toolbar.segmentPosition; // segment position\n\n    if (mw === 0) return;\n\n    if (this.toolbar.segmentWidth <= mw) {\n      if (this.toolbar.segmentPosition !== 0) {\n        this.toolbar.setSegmentPosition(0, animate);\n      }\n      return;\n    }\n\n    let pos;\n    if (ip + iw + (mw / 2 - iw / 2) > mw + sp) {\n      // we need to move the segment container to the left\n      const\n        delta: number = (ip + iw + (mw / 2 - iw / 2)) - mw - sp,\n        max: number = this.toolbar.segmentWidth - mw;\n\n      pos = sp + delta;\n      pos = pos < max ? pos : max;\n    } else if (ip - (mw / 2 - iw / 2) < sp) {\n      // we need to move the segment container to the right\n      pos = ip - (mw / 2 - iw / 2);\n      // pos = pos >= 0? pos : 0;\n      pos = pos < 0 ? 0 : pos > ip ? (ip - mw + iw) : pos;\n      // pos = pos < 0? 0 : pos > maxPos? maxPos : pos;\n    } else return; // no need to move the segment container\n\n    this.toolbar.setSegmentPosition(pos, animate);\n  }\n\n  private getRelativeIndicatorPosition(index: number = this.selectedTabIndex): number {\n    let position: number = 0;\n    for (let i: number = 0; i < this.toolbar.segmentButtonWidths.length; i++) {\n      if (index > Number(i)) {\n        position += this.toolbar.segmentButtonWidths[i];\n      }\n    }\n    return position;\n  }\n\n  private getAbsoluteIndicatorPosition(): number {\n    let position: number = this.selectedTabIndex * this.tabsContainer.tabWidth / this._tabs.length;\n    return position <= this.maxIndicatorPosition ? position : this.maxIndicatorPosition;\n  }\n\n  /**\n   * Gets the width of a tab button when `scrollTabs` is set to `true`\n   */\n  private getSegmentButtonWidth(index: number = this.selectedTabIndex): number {\n    if (!this._isToolbarVisible) return;\n    return this.toolbar.segmentButtonWidths[index];\n  }\n\n  private setMaxIndicatorPosition() {\n    if (this.el && this.el.nativeElement) {\n      this.maxIndicatorPosition = this.el.nativeElement.offsetWidth - (this.el.nativeElement.offsetWidth / this._tabs.length);\n    }\n  }\n\n  private setFixedIndicatorWidth() {\n    if (this.scrollTabs || !this._isToolbarVisible) return;\n    // the width of the \"slide\", should be equal to the width of a single `ion-segment-button`\n    // we'll just calculate it instead of querying for a segment button\n    this.toolbar.setIndicatorWidth(this.el.nativeElement.offsetWidth / this._tabs.length, false);\n  }\n\n  /**\n   * Aligns slide position with selected tab\n   */\n  private alignIndicatorPosition(animate: boolean = false) {\n    if (!this._isToolbarVisible) return;\n\n    if (this.scrollTabs) {\n      this.toolbar.alignIndicator(this.getRelativeIndicatorPosition(), this.getSegmentButtonWidth(), animate);\n      this.alignTabButtonsContainer(animate);\n    } else {\n      this.toolbar.setIndicatorPosition(this.getAbsoluteIndicatorPosition(), animate);\n    }\n  }\n\n  getTabIndexById(tabId: string): number {\n    return this._tabs.findIndex((tab: SuperTab) => tab.tabId === tabId);\n  }\n\n  getTabById(tabId: string): SuperTab {\n    return this._tabs.find((tab: SuperTab) => tab.tabId === tabId);\n  }\n\n  getActiveTab(): SuperTab {\n    return this._tabs[this.selectedTabIndex];\n  }\n\n  // needed since we're implementing RootNode\n  getElementRef() {\n    return this.el;\n  }\n\n  // needed since we're implementing RootNode\n  initPane() {\n    return true;\n  }\n\n  // needed since we're implementing RootNode\n  paneChanged() {\n  }\n\n  // needed to make Ionic Framework think this is a tabs component... needed for Deeplinking\n  getSelected() {\n  }\n\n  // needed to make Ionic Framework think this is a tabs component... needed for Deeplinking\n  setTabbarPosition() {\n  }\n\n  // update segment button widths manually\n  indexSegmentButtonWidths() {\n    this._plt.raf(() => this.toolbar.indexSegmentButtonWidths());\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'super-tabs',\n  template: `\n    <super-tabs-toolbar [tabsPlacement]=\"tabsPlacement\" [hidden]=\"!_isToolbarVisible\" [config]=\"config\"\n                        [color]=\"toolbarBackground\"\n                        [tabsColor]=\"toolbarColor\" [indicatorColor]=\"indicatorColor\" [badgeColor]=\"badgeColor\"\n                        [scrollTabs]=\"scrollTabs\"\n                        [selectedTab]=\"selectedTabIndex\"\n                        (tabSelect)=\"onToolbarTabSelect($event)\"></super-tabs-toolbar>\n    <super-tabs-container [config]=\"config\" [tabsCount]=\"_tabs.length\" [selectedTabIndex]=\"selectedTabIndex\"\n                          (tabSelect)=\"onContainerTabSelect($event)\" (onDrag)=\"onDrag()\">\n      <ng-content></ng-content>\n    </super-tabs-container>\n  `,\n  encapsulation: ViewEncapsulation.None,\n  providers: [\n    {\n      provide: RootNode,\n      useExisting: forwardRef(() => SuperTabs)\n    }\n  ]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NavController, decorators: [{ type: Optional }, ]},\n{type: ViewController, decorators: [{ type: Optional }, ]},\n{type: App, },\n{type: ElementRef, },\n{type: Renderer2, },\n{type: SuperTabsController, },\n{type: DeepLinker, },\n{type: DomController, },\n{type: Platform, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'toolbarBackground': [{ type: Input },],\n'toolbarColor': [{ type: Input },],\n'indicatorColor': [{ type: Input },],\n'badgeColor': [{ type: Input },],\n'config': [{ type: Input },],\n'id': [{ type: Input },],\n'name': [{ type: Input },],\n'height': [{ type: Input },],\n'selectedTabIndex': [{ type: Input },],\n'scrollTabs': [{ type: Input },],\n'tabsPlacement': [{ type: Input },],\n'tabSelect': [{ type: Output },],\n'toolbar': [{ type: ViewChild, args: [SuperTabsToolbar, ] },],\n'tabsContainer': [{ type: ViewChild, args: [SuperTabsContainer, ] },],\n};\n}\n\nlet superTabsIds = -1;\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}