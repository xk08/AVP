{"version":3,"file":"rating.js","sourceRoot":"","sources":["../../src/components/rating.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,SAAS,EACT,KAAK,EACL,MAAM,EACN,YAAY,EACZ,UAAU,EACX,MAAM,eAAe,CAAC;AACvB,OAAO,EAAwB,iBAAiB,EAAE,MAAM,gBAAgB,CAAC;;;0BA2CpC,IAAI,YAAY,EAAE;;IAIrD,iCAAO,GAAP,UAAQ,IAAI;QACV,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAChC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACjC;IAED,oCAAU,GAAV,UAAW,KAAU;QACnB,EAAE,CAAC,CAAC,KAAK,KAAK,SAAS,CAAC,CAAC,CAAC;YACxB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;SACnB;KACF;IAED,0CAAgB,GAAhB,UAAiB,EAAO;QACtB,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;KAC3B;IAED,2CAAiB,GAAjB,UAAkB,EAAO,KAAU;IAEnC,0CAAgB,GAAhB,UAAkB,UAAmB;QACnC,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC;KAC5B;;gBAjEF,SAAS,SAAC;oBACT,QAAQ,EAAE,QAAQ;oBAClB,QAAQ,EAAE,ubAOT;oBACD,MAAM,EAAE;wBACN,qLAYC;qBACF;oBACD,SAAS,EAAE;wBACT;4BACE,OAAO,EAAE,iBAAiB;4BAC1B,WAAW,EAAE,UAAU,CAAC,cAAM,OAAA,eAAe,EAAf,CAAe,CAAC;4BAC9C,KAAK,EAAE,IAAI;yBACZ;qBACF;iBACF;;;;yBAEE,KAAK;6BAEL,KAAK;0BAEL,KAAK;+BAEL,MAAM;;0BAjDT;;SA0Ca,eAAe","sourcesContent":["import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  forwardRef\n} from \"@angular/core\";\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\n@Component({\n  selector: \"rating\",\n  template: `\n    <ion-buttons>\n      <button type=\"button\" [disabled]=\"readonly\" ion-button icon-only clear [small]=\"small\" *ngFor=\"let current of [1, 2, 3, 4, 5]; let i = index\"\n        (click)=\"onClick(i + 1)\" (mouseover)=\"hoverRate = i + 1\" (mouseleave)=\"hoverRate = 0\">\n        <ion-icon name=\"star\" [class.filled]=\"(i + 1 <= hoverRate || (!hoverRate && i + 1 <= rate))\"></ion-icon>\n      </button>\n    </ion-buttons>\n  `,\n  styles: [\n    `\n      [ion-button][disabled] {\n        opacity: 1;\n      }\n\n      ion-icon {\n        color: gray;\n      }\n\n      ion-icon.filled {\n        color: orange;\n      }\n    `\n  ],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => RatingComponent),\n      multi: true\n    }\n  ]\n})\nexport class RatingComponent implements ControlValueAccessor {\n  @Input()\n  rate: number;\n  @Input()\n  readonly: boolean;\n  @Input()\n  small: boolean;\n  @Output()\n  rateChange: EventEmitter<number> = new EventEmitter();\n  hoverRate: number;\n  propagateChange: Function;\n\n  onClick(rate) {\n    this.rate = rate;\n    this.rateChange.emit(this.rate);\n    this.propagateChange(this.rate);\n  }\n\n  writeValue(value: any): void {\n    if (value !== undefined) {\n      this.rate = value;\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {}\n\n  setDisabledState?(isDisabled: boolean): void {\n    this.readonly = isDisabled;\n  }\n}\n"]}