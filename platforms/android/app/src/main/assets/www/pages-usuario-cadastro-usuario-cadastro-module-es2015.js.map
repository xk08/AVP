{"version":3,"sources":["./src/app/pages/usuario-cadastro/usuario-cadastro.page.html","./src/app/pages/usuario-cadastro/usuario-cadastro.module.ts","./src/app/pages/usuario-cadastro/usuario-cadastro.page.scss","./src/app/pages/usuario-cadastro/usuario-cadastro.page.ts"],"names":[],"mappings":"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","file":"pages-usuario-cadastro-usuario-cadastro-module-es2015.js","sourcesContent":["module.exports = \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button defaultHref=\\\"login\\\"></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>Conhecendo você</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content padding>\\r\\n  <ion-grid>\\r\\n    <!-- alinha no centro e define pra coluna a resolucao de acordo com o tamanho da tela -->\\r\\n    <ion-row justify-content-center>\\r\\n      <!-- Deixa responsivo -->\\r\\n      <ion-col\\r\\n        size-sm=\\\"8\\\"\\r\\n        size-md=\\\"12\\\"\\r\\n        size-lg=\\\"3\\\"\\r\\n        size-xl=\\\"3\\\"\\r\\n      >\\r\\n        <div class=\\\"ion-text-center\\\">\\r\\n          <ion-col\\r\\n            size=\\\"12\\\"\\r\\n            size-sm=\\\"6\\\"\\r\\n          >\\r\\n            <img\\r\\n              width=\\\"130px\\\"\\r\\n              height=\\\"100px\\\"\\r\\n              src=\\\"../../../assets/img/avp.png\\\"\\r\\n            >\\r\\n          </ion-col>\\r\\n        </div>\\r\\n        <form [formGroup]=\\\"formgroup\\\">\\r\\n\\r\\n\\r\\n          <!-- NOME -->\\r\\n          <ion-item>\\r\\n            <ion-icon\\r\\n              name=\\\"person\\\"\\r\\n              color=\\\"primary\\\"\\r\\n              slot=\\\"start\\\"\\r\\n            ></ion-icon>\\r\\n            <ion-input\\r\\n              type=\\\"text\\\"\\r\\n              name=\\\"nome\\\"\\r\\n              placeholder=\\\"Nome\\\"\\r\\n              autofocus=\\\"true\\\"\\r\\n              required\\r\\n              [(ngModel)]='todoUser.nome'\\r\\n              formControlName=\\\"nome\\\"\\r\\n            ></ion-input>\\r\\n            <div class=\\\"erro-mensagens\\\">\\r\\n              <ng-container *ngFor=\\\"let error of errorMensagens.nome\\\">\\r\\n                <div *ngIf=\\\"formgroup.get('nome').hasError(error.type) && (formgroup.get('nome').dirty || formgroup.get('nome').touched)\\\">{{ error.mensagem }}</div>\\r\\n              </ng-container>\\r\\n            </div>\\r\\n          </ion-item>\\r\\n\\r\\n\\r\\n          <!-- DATA DE NASCIMENTO -->\\r\\n          <ion-item>\\r\\n            <ion-icon\\r\\n              name=\\\"calendar\\\"\\r\\n              color=\\\"primary\\\"\\r\\n              slot=\\\"start\\\"\\r\\n            ></ion-icon>\\r\\n            <ion-label>Data de Nascimento</ion-label>\\r\\n            <ion-datetime\\r\\n              displayFormat=\\\"DD/MM/YYYY\\\"\\r\\n              [(ngModel)]='todoUser.dataNasc'\\r\\n              name=\\\"dataNascimento\\\"\\r\\n              formControlName=\\\"dataNascimento\\\"\\r\\n              required\\r\\n            >\\r\\n            </ion-datetime>\\r\\n            <div class=\\\"erro-mensagens\\\">\\r\\n              <ng-container *ngFor=\\\"let error of errorMensagens.dataNascimento\\\">\\r\\n                <div *ngIf=\\\"formgroup.get('dataNascimento').hasError(error.type) && (formgroup.get('dataNascimento').dirty || formgroup.get('dataNascimento').touched)\\\">{{ error.mensagem }}</div>\\r\\n              </ng-container>\\r\\n            </div>\\r\\n          </ion-item>\\r\\n\\r\\n\\r\\n          <!-- EMAIL -->\\r\\n          <ion-item>\\r\\n            <ion-icon\\r\\n              name=\\\"mail\\\"\\r\\n              color=\\\"primary\\\"\\r\\n              slot=\\\"start\\\"\\r\\n            ></ion-icon>\\r\\n            <ion-input\\r\\n              type=\\\"text\\\"\\r\\n              formControlName=\\\"email\\\"\\r\\n              placeholder=\\\"E-mail\\\"\\r\\n              [(ngModel)]='todoUser.email'\\r\\n              required\\r\\n            ></ion-input>\\r\\n            <div class=\\\"erro-mensagens\\\">\\r\\n              <ng-container *ngFor=\\\"let error of errorMensagens.email\\\">\\r\\n                <div *ngIf=\\\"formgroup.get('email').hasError(error.type) && (formgroup.get('email').dirty || formgroup.get('email').touched)\\\">{{ error.mensagem }}</div>\\r\\n              </ng-container>\\r\\n            </div>\\r\\n          </ion-item>\\r\\n\\r\\n\\r\\n          <!-- SENHA -->\\r\\n          <ion-item>\\r\\n            <ion-icon\\r\\n              name=\\\"lock\\\"\\r\\n              color=\\\"primary\\\"\\r\\n              slot=\\\"start\\\"\\r\\n            ></ion-icon>\\r\\n            <ion-input\\r\\n              type=\\\"password\\\"\\r\\n              formControlName=\\\"senha\\\"\\r\\n              placeholder=\\\"Senha\\\"\\r\\n              [(ngModel)]='todoUser.senha'\\r\\n              required\\r\\n            ></ion-input>\\r\\n            <div class=\\\"erro-mensagens\\\">\\r\\n              <ng-container *ngFor=\\\"let error of errorMensagens.senha\\\">\\r\\n                <div *ngIf=\\\"formgroup.get('senha').hasError(error.type) && (formgroup.get('senha').dirty || formgroup.get('senha').touched)\\\">{{ error.mensagem }}</div>\\r\\n              </ng-container>\\r\\n            </div>\\r\\n          </ion-item>\\r\\n\\r\\n\\r\\n          <!-- BOTÃO DE CADASTRO -->\\r\\n          <ion-button\\r\\n            expand=\\\"block\\\"\\r\\n            type=\\\"submit\\\"\\r\\n            class=\\\"login-button\\\"\\r\\n            (click)=\\\"concluiCadastro()\\\"\\r\\n            color=\\\"primary\\\"\\r\\n            [disabled]=\\\"formgroup.invalid\\\"\\r\\n\\r\\n          >\\r\\n            Cadastrar\\r\\n          </ion-button>\\r\\n\\r\\n\\r\\n          <ion-card-content>\\r\\n            <div>\\r\\n              <ion-row>\\r\\n                <ion-card-title style=\\\"font-size: 11pt; text-align: center;\\\">É profissional da saúde ?</ion-card-title>\\r\\n                <ion-card-title\\r\\n                  style=\\\"font-size: 11pt;\\r\\n              text-align: left;\\r\\n              padding-left: 5px;\\r\\n              font-weight: bold ;\\r\\n              color: royalblue\\\"\\r\\n                  (click)=\\\"cadastroProfissional()\\\"\\r\\n                >\\r\\n                  Clique Aqui\\r\\n                </ion-card-title>\\r\\n              </ion-row>\\r\\n            </div>\\r\\n          </ion-card-content>\\r\\n        </form>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-grid>\\r\\n</ion-content>\\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { UsuarioCadastroPage } from './usuario-cadastro.page';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: UsuarioCadastroPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [SharedModule, RouterModule.forChild(routes)],\r\n  declarations: [UsuarioCadastroPage]\r\n})\r\nexport class UsuarioCadastroPageModule {}\r\n","module.exports = \"ion-card ion-item {\\n  --border-radius: 10px;\\n}\\nion-card img {\\n  width: 70%;\\n  margin: auto;\\n}\\n.texto {\\n  color: black;\\n}\\n.erro-mensagens {\\n  font-size: 0.6em;\\n  color: red;\\n  text-align: left;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvdXN1YXJpby1jYWRhc3Ryby9EOlxcbWFyY29zXFxUQ0NcXHRjYy9zcmNcXGFwcFxccGFnZXNcXHVzdWFyaW8tY2FkYXN0cm9cXHVzdWFyaW8tY2FkYXN0cm8ucGFnZS5zY3NzIiwic3JjL2FwcC9wYWdlcy91c3VhcmlvLWNhZGFzdHJvL3VzdWFyaW8tY2FkYXN0cm8ucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNFO0VBQ0UscUJBQUE7QUNBSjtBREVFO0VBQ0UsVUFBQTtFQUNBLFlBQUE7QUNBSjtBREtBO0VBQ0UsWUFBQTtBQ0ZGO0FES0E7RUFDRSxnQkFBQTtFQUNBLFVBQUE7RUFDQSxnQkFBQTtBQ0ZGIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvdXN1YXJpby1jYWRhc3Ryby91c3VhcmlvLWNhZGFzdHJvLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi1jYXJkIHtcclxuICBpb24taXRlbXtcclxuICAgIC0tYm9yZGVyLXJhZGl1czogMTBweDtcclxuICB9XHJcbiAgaW1ne1xyXG4gICAgd2lkdGg6IDcwJTtcclxuICAgIG1hcmdpbjogYXV0bztcclxuICB9XHJcblxyXG59XHJcblxyXG4udGV4dG97XHJcbiAgY29sb3I6IGJsYWNrO1xyXG59XHJcblxyXG4uZXJyby1tZW5zYWdlbnN7XHJcbiAgZm9udC1zaXplOiAwLjZlbTtcclxuICBjb2xvcjogcmVkO1xyXG4gIHRleHQtYWxpZ246IGxlZnQ7XHJcbn1cclxuIiwiaW9uLWNhcmQgaW9uLWl0ZW0ge1xuICAtLWJvcmRlci1yYWRpdXM6IDEwcHg7XG59XG5pb24tY2FyZCBpbWcge1xuICB3aWR0aDogNzAlO1xuICBtYXJnaW46IGF1dG87XG59XG5cbi50ZXh0byB7XG4gIGNvbG9yOiBibGFjaztcbn1cblxuLmVycm8tbWVuc2FnZW5zIHtcbiAgZm9udC1zaXplOiAwLjZlbTtcbiAgY29sb3I6IHJlZDtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbn0iXX0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { NgForm, FormGroup, FormBuilder, Validators, AbstractControl } from '@angular/forms';\r\nimport { AngularFireAuth } from 'angularfire2/auth';\r\nimport { LoadingController, NavController, ToastController } from '@ionic/angular';\r\nimport { UsuarioCadastro } from 'src/app/services/usuarioCadastro/usuarioCadastro';\r\nimport { UsuarioCadastroService } from 'src/app/services/usuarioCadastro/usuario-cadastro.service';\r\nimport { CoreModule } from 'src/app/core/core.module';\r\nimport { Network } from '@ionic-native/network/ngx';\r\n\r\n@Component({\r\n  selector: 'app-usuario-cadastro',\r\n  templateUrl: './usuario-cadastro.page.html',\r\n  styleUrls: ['./usuario-cadastro.page.scss']\r\n})\r\nexport class UsuarioCadastroPage implements OnInit {\r\n\r\n  public errorMensagens: any;\r\n  public uidUser: any;\r\n  public formgroup: FormGroup;\r\n  public email: AbstractControl;\r\n  public senha: AbstractControl;\r\n\r\n\r\n  constructor(\r\n    private afAuth: AngularFireAuth,\r\n    private usuarioService: UsuarioCadastroService,\r\n    private loadingController: LoadingController, // Substituir depois pelo overlayService (que é genérico)\r\n    private navCtrl: NavController,\r\n    private core: CoreModule,\r\n    public formBuilder: FormBuilder,\r\n    private network: Network,\r\n    private toastController : ToastController\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.errorMensagens = this.core.identForm;\r\n\r\n    this.formgroup = this.formBuilder.group({\r\n      email: ['', Validators.compose([\r\n        Validators.required,\r\n        Validators.minLength(6),\r\n        Validators.maxLength(30),\r\n        Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\r\n      ])],\r\n      senha: ['', Validators.compose([\r\n        Validators.required,\r\n        Validators.minLength(6),\r\n        Validators.maxLength(30),\r\n        Validators.pattern('^[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\r\n      ])],\r\n      nome: ['', Validators.compose([\r\n        Validators.required,\r\n        Validators.minLength(3),\r\n        Validators.maxLength(50),\r\n        //Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\r\n      ])],\r\n      dataNascimento: ['', Validators.compose([\r\n        Validators.required,\r\n      ])],\r\n    });\r\n    this.networkConnect();\r\n  }\r\n\r\n  async networkConnect() {\r\n    const loading = await this.loadingController.create({\r\n      message: 'Conectando com a Internet...'\r\n    });\r\n    this.network.onDisconnect().subscribe(() => {\r\n      loading.dismiss();\r\n    });\r\n  }\r\n\r\n  //FUNÇÃO PARA CADASTRAR NOVO USUARIO\r\n  async concluiCadastro() {\r\n    const loading = await this.loadingController.create({\r\n      //Trocar pelo overlay\r\n      message: 'Salvando dados...'\r\n    });\r\n\r\n    //PASSA OS DADOS PARA CADASTRAR O USUARIO E SEU ENDEREÇO ENQUANTO ISSO EXIBE UM LOADING\r\n    this.uidUser = this.usuarioService.addUsuarioTodo(this.todoUser).then(() => {\r\n      loading.dismiss();\r\n      this.navCtrl.navigateBack('login');\r\n      this.presentToast('Parabéns, ' + this.todoUser.nome + ' \\n Você foi cadastrado (a) com sucesso.');\r\n    })\r\n      .catch((error: any) => {\r\n        this.core.identificaError(error.code);\r\n      });\r\n  }\r\n\r\n\r\n  async presentToast(msg: string) {\r\n    const toast = await this.toastController.create({\r\n      message: msg,\r\n      duration: 4000,\r\n      position: 'top'\r\n    });\r\n    toast.present();\r\n  }\r\n  async cadastroProfissional() {\r\n    this.navCtrl.navigateBack('profissional/cadastro');\r\n  }\r\n\r\n  //REFERÊNCIA A CLASS USUARIO\r\n  todoUser: UsuarioCadastro = {\r\n    nome: '',\r\n    dataNasc: null,\r\n    foto: '',\r\n    profissao: '',\r\n    email: '',\r\n    senha: '',\r\n    isAdmin: false,\r\n    isProfissional: false\r\n  };\r\n\r\n}"],"sourceRoot":""}