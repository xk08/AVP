{"version":3,"sources":["./src/app/pages/profissional-cadastro/profissional-cadastro.page.html","./src/app/pages/profissional-cadastro/profissional-cadastro.module.ts","./src/app/pages/profissional-cadastro/profissional-cadastro.page.scss","./src/app/pages/profissional-cadastro/profissional-cadastro.page.ts"],"names":[],"mappings":"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","file":"pages-profissional-cadastro-profissional-cadastro-module-es5.js","sourcesContent":["module.exports = \"<ion-header>\\r\\n  <ion-toolbar color=\\\"dark\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button defaultHref=\\\"login\\\"></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>Suas informações</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content padding>\\r\\n  <ion-grid>\\r\\n    <!-- alinha no centro e define pra coluna a resolucao de acordo com o tamanho da tela -->\\r\\n    <ion-row justify-content-center>\\r\\n      <!-- Deixa responsivo -->\\r\\n      <ion-col\\r\\n        size-sm=\\\"8\\\"\\r\\n        size-md=\\\"12\\\"\\r\\n        size-lg=\\\"3\\\"\\r\\n        size-xl=\\\"3\\\"\\r\\n      >\\r\\n        <h1 style=text-align:center>\\r\\n          <img\\r\\n            src=\\\"../../../assets/img/avp.png\\\"\\r\\n            width=\\\"130px\\\"\\r\\n            height=\\\"100px\\\"\\r\\n          >\\r\\n        </h1>\\r\\n        <form [formGroup]=\\\"formgroup\\\">\\r\\n          <!-- NOME -->\\r\\n          <ion-item>\\r\\n            <ion-icon\\r\\n              color=\\\"dark\\\"\\r\\n              name=\\\"person\\\"\\r\\n              slot=\\\"start\\\"\\r\\n            ></ion-icon>\\r\\n            <ion-input\\r\\n              type=\\\"text\\\"\\r\\n              formControlName=\\\"nome\\\"\\r\\n              placeholder=\\\"Nome\\\"\\r\\n              [(ngModel)]='todoUser.nome'\\r\\n              required\\r\\n            ></ion-input>\\r\\n            <div class=\\\"erro-mensagens\\\">\\r\\n              <ng-container *ngFor=\\\"let error of errorMensagens.nome\\\">\\r\\n                <div *ngIf=\\\"formgroup.get('nome').hasError(error.type) && (formgroup.get('nome').dirty || formgroup.get('nome').touched)\\\">{{ error.mensagem }}</div>\\r\\n              </ng-container>\\r\\n            </div>\\r\\n          </ion-item>\\r\\n          <!-- PROFISSÃO -->\\r\\n          <ion-item>\\r\\n            <ion-icon\\r\\n              name=\\\"md-briefcase\\\"\\r\\n              color=\\\"dark\\\"\\r\\n              slot=\\\"start\\\"\\r\\n            ></ion-icon>\\r\\n            <ion-input\\r\\n              type=\\\"text\\\"\\r\\n              formControlName=\\\"profissao\\\"\\r\\n              placeholder=\\\"Profissão\\\"\\r\\n              [(ngModel)]=\\\"todoUser.profissao\\\"\\r\\n              required\\r\\n            ></ion-input>\\r\\n            <div class=\\\"erro-mensagens\\\">\\r\\n              <ng-container *ngFor=\\\"let error of errorMensagens.profissao\\\">\\r\\n                <div *ngIf=\\\"formgroup.get('profissao').hasError(error.type) && (formgroup.get('profissao').dirty || formgroup.get('profissao').touched)\\\">{{ error.mensagem }}</div>\\r\\n              </ng-container>\\r\\n            </div>\\r\\n          </ion-item>\\r\\n          <!-- EMAIL -->\\r\\n          <ion-item>\\r\\n            <ion-icon\\r\\n              name=\\\"mail\\\"\\r\\n              color=\\\"dark\\\"\\r\\n              slot=\\\"start\\\"\\r\\n            ></ion-icon>\\r\\n            <ion-input\\r\\n              type=\\\"text\\\"\\r\\n              formControlName=\\\"email\\\"\\r\\n              placeholder=\\\"E-mail\\\"\\r\\n              [(ngModel)]=\\\"todoUser.email\\\"\\r\\n              required\\r\\n            ></ion-input>\\r\\n            <div class=\\\"erro-mensagens\\\">\\r\\n              <ng-container *ngFor=\\\"let error of errorMensagens.email\\\">\\r\\n                <div *ngIf=\\\"formgroup.get('email').hasError(error.type) && (formgroup.get('email').dirty || formgroup.get('email').touched)\\\">{{ error.mensagem }}</div>\\r\\n              </ng-container>\\r\\n            </div>\\r\\n          </ion-item>\\r\\n          <!-- SENHA -->\\r\\n          <ion-item>\\r\\n            <ion-icon\\r\\n              name=\\\"lock\\\"\\r\\n              color=\\\"dark\\\"\\r\\n              slot=\\\"start\\\"\\r\\n            ></ion-icon>\\r\\n            <ion-input\\r\\n              type=\\\"password\\\"\\r\\n              formControlName=\\\"senha\\\"\\r\\n              placeholder=\\\"Senha\\\"\\r\\n              [(ngModel)]=\\\"todoUser.senha\\\"\\r\\n              required\\r\\n            ></ion-input>\\r\\n            <div class=\\\"erro-mensagens\\\">\\r\\n              <ng-container *ngFor=\\\"let error of errorMensagens.senha\\\">\\r\\n                <div *ngIf=\\\"formgroup.get('senha').hasError(error.type) && (formgroup.get('senha').dirty || formgroup.get('senha').touched)\\\">{{ error.mensagem }}</div>\\r\\n              </ng-container>\\r\\n            </div>\\r\\n          </ion-item>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n          <!-- BOTÃO DE CADASTRO -->\\r\\n          <ion-button\\r\\n            expand=\\\"block\\\"\\r\\n            type=\\\"submit\\\"\\r\\n            class=\\\"login-button\\\"\\r\\n            (click)=\\\"concluiCadastro()\\\"\\r\\n            color=\\\"dark\\\"\\r\\n            [disabled]=\\\"formgroup.invalid\\\"\\r\\n          >\\r\\n            Colaborar\\r\\n          </ion-button>\\r\\n        </form>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-grid>\\r\\n</ion-content>\\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ProfissionalCadastroPage } from './profissional-cadastro.page';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ProfissionalCadastroPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [SharedModule, RouterModule.forChild(routes)],\r\n  declarations: [ProfissionalCadastroPage]\r\n})\r\nexport class ProfissionalCadastroPageModule {}\r\n","module.exports = \"ion-card ion-item {\\n  --border-radius: 10px;\\n}\\nion-card img {\\n  width: 70%;\\n  margin: auto;\\n}\\n.texto {\\n  color: black;\\n}\\n.erro-mensagens {\\n  font-size: 0.6em;\\n  color: red;\\n  text-align: left;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvcHJvZmlzc2lvbmFsLWNhZGFzdHJvL0Q6XFxtYXJjb3NcXFRDQ1xcdGNjL3NyY1xcYXBwXFxwYWdlc1xccHJvZmlzc2lvbmFsLWNhZGFzdHJvXFxwcm9maXNzaW9uYWwtY2FkYXN0cm8ucGFnZS5zY3NzIiwic3JjL2FwcC9wYWdlcy9wcm9maXNzaW9uYWwtY2FkYXN0cm8vcHJvZmlzc2lvbmFsLWNhZGFzdHJvLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDRTtFQUNFLHFCQUFBO0FDQUo7QURFRTtFQUNFLFVBQUE7RUFDQSxZQUFBO0FDQUo7QURHQTtFQUNFLFlBQUE7QUNBRjtBREVBO0VBQ0UsZ0JBQUE7RUFDQSxVQUFBO0VBQ0EsZ0JBQUE7QUNDRiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3Byb2Zpc3Npb25hbC1jYWRhc3Ryby9wcm9maXNzaW9uYWwtY2FkYXN0cm8ucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWNhcmQge1xyXG4gIGlvbi1pdGVte1xyXG4gICAgLS1ib3JkZXItcmFkaXVzOiAxMHB4O1xyXG4gIH1cclxuICBpbWd7XHJcbiAgICB3aWR0aDogNzAlO1xyXG4gICAgbWFyZ2luOiBhdXRvO1xyXG4gIH1cclxufVxyXG4udGV4dG97XHJcbiAgY29sb3I6IGJsYWNrO1xyXG59XHJcbi5lcnJvLW1lbnNhZ2Vuc3tcclxuICBmb250LXNpemU6IDAuNmVtO1xyXG4gIGNvbG9yOiByZWQ7XHJcbiAgdGV4dC1hbGlnbjogbGVmdDtcclxufVxyXG5cclxuIiwiaW9uLWNhcmQgaW9uLWl0ZW0ge1xuICAtLWJvcmRlci1yYWRpdXM6IDEwcHg7XG59XG5pb24tY2FyZCBpbWcge1xuICB3aWR0aDogNzAlO1xuICBtYXJnaW46IGF1dG87XG59XG5cbi50ZXh0byB7XG4gIGNvbG9yOiBibGFjaztcbn1cblxuLmVycm8tbWVuc2FnZW5zIHtcbiAgZm9udC1zaXplOiAwLjZlbTtcbiAgY29sb3I6IHJlZDtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbn0iXX0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { NgForm, Validators, FormGroup, AbstractControl, FormBuilder } from '@angular/forms';\r\nimport { AngularFireAuth } from 'angularfire2/auth';\r\nimport { UsuarioCadastroService } from 'src/app/services/usuarioCadastro/usuario-cadastro.service';\r\nimport { LoadingController, NavController, ToastController } from '@ionic/angular';\r\nimport { UsuarioCadastro } from 'src/app/services/usuarioCadastro/usuarioCadastro';\r\nimport { Network } from '@ionic-native/network/ngx';\r\nimport { CoreModule } from 'src/app/core/core.module';\r\n\r\n@Component({\r\n  selector: 'app-profissional-cadastro',\r\n  templateUrl: './profissional-cadastro.page.html',\r\n  styleUrls: ['./profissional-cadastro.page.scss']\r\n})\r\nexport class ProfissionalCadastroPage implements OnInit {\r\n  public uidUser: any;\r\n  public formgroup: FormGroup;\r\n  public email: AbstractControl;\r\n  public senha: AbstractControl ;\r\n  public errorMensagens: any;\r\n\r\n  constructor(\r\n    private afAuth: AngularFireAuth,\r\n    private usuarioService: UsuarioCadastroService,\r\n    private loadingController: LoadingController, // Substituir depois pelo overlayService (que é genérico)\r\n    private navCtrl: NavController,\r\n    public formBuilder: FormBuilder,\r\n    private network: Network,\r\n    private core: CoreModule,\r\n    private toastController: ToastController\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.errorMensagens = this.core.identForm;\r\n\r\n    this.formgroup = this.formBuilder.group({\r\n      email: ['', Validators.compose([\r\n        Validators.required,\r\n        Validators.minLength(6),\r\n        Validators.maxLength(30),\r\n        Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\r\n      ])],\r\n      senha: ['', Validators.compose([\r\n        Validators.required,\r\n        Validators.minLength(6),\r\n        Validators.maxLength(30),\r\n        Validators.pattern('^[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\r\n      ])],\r\n      nome: ['', Validators.compose([\r\n        Validators.required,\r\n        Validators.minLength(3),\r\n        Validators.maxLength(50),\r\n        //Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\r\n      ])],\r\n      profissao: ['', Validators.compose([\r\n        Validators.required,\r\n        Validators.minLength(6),\r\n        Validators.maxLength(30),\r\n        // Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\r\n      ])]\r\n    });\r\n    this.networkConnect();\r\n  }\r\n\r\n  async networkConnect() {\r\n    const loading = await this.loadingController.create({\r\n      message: 'Conectando com a Internet...'\r\n    })\r\n    this.network.onDisconnect().subscribe(() => {\r\n      loading.dismiss();\r\n    });\r\n  }\r\n\r\n  //FUNÇÃO PARA CADASTRAR NOVO USUARIO\r\n  async concluiCadastro() {\r\n    const loading = await this.loadingController.create({\r\n      //Trocar pelo overlay\r\n      message: 'Salvando dados...'\r\n    });\r\n\r\n    //PASSA OS DADOS PARA CADASTRAR O USUARIO E SEU ENDEREÇO ENQUANTO ISSO EXIBE UM LOADING\r\n    this.uidUser = this.usuarioService.addUsuarioTodo(this.todoUser).then(() => {\r\n      loading.dismiss();\r\n      this.navCtrl.navigateBack('login');\r\n      this.presentToast('Parabéns, ' + this.todoUser.nome + ' \\n Você foi cadastrado (a) com sucesso.');\r\n    })\r\n    .catch((error:any) => {\r\n      this.core.identificaError(error.code);\r\n    })\r\n  }\r\n\r\n  async presentToast(msg: string) {\r\n    const toast = await this.toastController.create({\r\n      message: msg,\r\n      duration: 4000,\r\n      position: 'top'\r\n    });\r\n    toast.present();\r\n  }\r\n\r\n\r\n  //REFERÊNCIA A CLASS USUARIO\r\n  todoUser: UsuarioCadastro = {\r\n    nome: '',\r\n    dataNasc: 0,\r\n    foto: '',\r\n    profissao: '',\r\n    email: '',\r\n    senha: '',\r\n    isAdmin: false,\r\n    isProfissional: true\r\n  };\r\n}\r\n\r\n"],"sourceRoot":""}