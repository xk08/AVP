import { Component, Input, Output, EventEmitter, forwardRef } from "@angular/core";
import { NG_VALUE_ACCESSOR } from "@angular/forms";
var RatingComponent = /** @class */ (function () {
    function RatingComponent() {
        this.rateChange = new EventEmitter();
    }
    RatingComponent.prototype.onClick = function (rate) {
        this.rate = rate;
        this.rateChange.emit(this.rate);
        this.propagateChange(this.rate);
    };
    RatingComponent.prototype.writeValue = function (value) {
        if (value !== undefined) {
            this.rate = value;
        }
    };
    RatingComponent.prototype.registerOnChange = function (fn) {
        this.propagateChange = fn;
    };
    RatingComponent.prototype.registerOnTouched = function (fn) { };
    RatingComponent.prototype.setDisabledState = function (isDisabled) {
        this.readonly = isDisabled;
    };
    RatingComponent.decorators = [
        { type: Component, args: [{
                    selector: "rating",
                    template: "\n    <ion-buttons>\n      <button type=\"button\" [disabled]=\"readonly\" ion-button icon-only clear [small]=\"small\" *ngFor=\"let current of [1, 2, 3, 4, 5]; let i = index\"\n        (click)=\"onClick(i + 1)\" (mouseover)=\"hoverRate = i + 1\" (mouseleave)=\"hoverRate = 0\">\n        <ion-icon name=\"star\" [class.filled]=\"(i + 1 <= hoverRate || (!hoverRate && i + 1 <= rate))\"></ion-icon>\n      </button>\n    </ion-buttons>\n  ",
                    styles: [
                        "\n      [ion-button][disabled] {\n        opacity: 1;\n      }\n\n      ion-icon {\n        color: gray;\n      }\n\n      ion-icon.filled {\n        color: orange;\n      }\n    "
                    ],
                    providers: [
                        {
                            provide: NG_VALUE_ACCESSOR,
                            useExisting: forwardRef(function () { return RatingComponent; }),
                            multi: true
                        }
                    ]
                },] },
    ];
    /** @nocollapse */
    RatingComponent.propDecorators = {
        "rate": [{ type: Input },],
        "readonly": [{ type: Input },],
        "small": [{ type: Input },],
        "rateChange": [{ type: Output },],
    };
    return RatingComponent;
}());
export { RatingComponent };
//# sourceMappingURL=rating.js.map